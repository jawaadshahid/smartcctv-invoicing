generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int      @id @default(autoincrement())
  firstName  String   @db.VarChar(190)
  lastName   String   @db.VarChar(190)
  password   String   @db.VarChar(190)
  email      String   @unique
  createdAt  DateTime @db.DateTime(0)
  updatedAt  DateTime @db.DateTime(0)
  isAdmin    Int      @default(0) @db.TinyInt
  isApproved Int      @default(0) @db.TinyInt
  address    String?  @db.VarChar(190)
}

model customers {
  customer_id Int        @id @default(autoincrement())
  name        String     @db.VarChar(190)
  tel         String     @db.VarChar(190)
  email       String     @db.VarChar(190)
  address     String     @db.VarChar(190)
  invoice     invoices[]
  quote       quotes[]

  @@fulltext([name, tel, email, address])
}

model quotes {
  quote_id        Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  customer_id     Int
  labour          Decimal           @db.Decimal(8, 2)
  discount        Decimal           @db.Decimal(8, 2)
  quoted_products quoted_products[]
  customer        customers         @relation(fields: [customer_id], references: [customer_id])

  @@index([customer_id], map: "quotes_customer_id_fkey")
}

model quoted_products {
  invprod_id Int     @id @default(autoincrement())
  quote_id   Int?
  name       String  @db.VarChar(190)
  quantity   Int     @default(1) @db.SmallInt
  price      Decimal @db.Decimal(8, 2)
  quote      quotes? @relation(fields: [quote_id], references: [quote_id])

  @@index([quote_id], map: "quoted_products_quote_id_fkey")
}

model invoices {
  invoice_id        Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  customer_id       Int
  labour            Decimal             @db.Decimal(8, 2)
  discount          Decimal             @db.Decimal(8, 2)
  invoiced_products invoiced_products[]
  customer          customers           @relation(fields: [customer_id], references: [customer_id])

  @@index([customer_id], map: "invoices_customer_id_fkey")
}

model invoiced_products {
  invprod_id Int       @id @default(autoincrement())
  invoice_id Int?
  name       String    @db.VarChar(190)
  quantity   Int       @default(1) @db.SmallInt
  price      Decimal   @db.Decimal(8, 2)
  invoice    invoices? @relation(fields: [invoice_id], references: [invoice_id])

  @@index([invoice_id], map: "invoiced_products_invoice_id_fkey")
}

model products {
  product_id Int            @id @default(autoincrement())
  model_id   Int
  brand_id   Int
  type_id    Int
  price      Decimal        @db.Decimal(8, 2)
  brand_name String
  model_name String
  type_name  String
  brand      product_brands @relation(fields: [brand_id, brand_name], references: [brand_id, brand_name])
  model      product_models @relation(fields: [model_id, model_name], references: [model_id, model_name])
  type       product_types  @relation(fields: [type_id, type_name], references: [type_id, type_name])

  @@index([brand_id], map: "products_brand_id_fkey")
  @@index([model_id], map: "products_model_id_fkey")
  @@index([type_id], map: "products_type_id_fkey")
  @@index([brand_id, brand_name], map: "products_brand_id_brand_name_fkey")
  @@index([model_id, model_name], map: "products_model_id_model_name_fkey")
  @@index([type_id, type_name], map: "products_type_id_type_name_fkey")
  @@fulltext([brand_name, model_name, type_name])
}

model product_brands {
  brand_id   Int        @id @default(autoincrement())
  brand_name String     @db.VarChar(190)
  products   products[]

  @@unique([brand_id, brand_name])
  @@fulltext([brand_name])
}

model product_models {
  model_id   Int        @id @default(autoincrement())
  model_name String     @db.VarChar(190)
  products   products[]

  @@unique([model_id, model_name])
  @@fulltext([model_name])
}

model product_types {
  type_id   Int        @id @default(autoincrement())
  type_name String     @db.VarChar(190)
  products  products[]

  @@unique([type_id, type_name])
  @@fulltext([type_name])
}

model jobs {
  job_id    Int    @id @default(autoincrement())
  job_title String @db.VarChar(190)
  job_body  String @db.Text
}
