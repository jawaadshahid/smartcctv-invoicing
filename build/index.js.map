{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/session.tsx", "../app/utils/db.tsx", "../app/components/NavBar.tsx", "../app/routes/quotes.$quoteid.generatedquote.tsx", "../app/components/QuotePDFDoc.tsx", "../app/routes/quotes.$quoteid.tsx", "../app/components/Modal.tsx", "../app/components/ShareQuoteForm.tsx", "../app/utils/styleClasses.ts", "../app/utils/mailer.ts", "../app/utils/validations.tsx", "../app/routes/users.register.tsx", "../app/routes/quotes._index.tsx", "../app/routes/quotes.create.tsx", "../app/components/CreateCustomerForm.tsx", "../app/components/CreateProductForm.tsx", "../app/components/QuoteProductRow.tsx", "../app/routes/users.$userid.tsx", "../app/routes/users._index.tsx", "../app/routes/customers.tsx", "../app/routes/products.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/quotes.tsx", "../app/routes/login.tsx", "../app/routes/users.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport nodemailer from 'nodemailer';\nexport const mailer = nodemailer;\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import stylesheet from \"~/tailwind.css\";\nimport { json, type LinksFunction, type LoaderArgs } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport { createContext } from \"react\";\nimport { getUserId } from \"./utils/session\";\nimport { getUserById } from \"./utils/db\";\nimport NavBar from \"./components/NavBar\";\n\nexport const SITE_TITLE = \"Smart CCTV admin\";\n\nexport const UserContext = createContext(null);\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = (await getUserId(request) as number);\n  if (!uid) return {};\n  try {\n    const user = await getUserById(uid);\n    return json({ user });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport default function App() {\n  const { user } = useLoaderData();\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <UserContext.Provider value={user}>\n          <NavBar />\n          <Outlet />\n        </UserContext.Provider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import {\r\n    createCookieSessionStorage,\r\n    redirect,\r\n} from \"@remix-run/node\";\r\n\r\nconst sessionSecret = 'sessionYsecret';\r\nif (!sessionSecret) {\r\n    throw new Error(\"SESSION_SECRET must be set\");\r\n}\r\nconst storage = createCookieSessionStorage({\r\n    cookie: {\r\n        name: \"user_session\",\r\n        // normally you want this to be `secure: true`\r\n        // but that doesn't work on localhost for Safari\r\n        // https://web.dev/when-to-use-local-https/\r\n        secure: process.env.NODE_ENV === \"production\",\r\n        secrets: [sessionSecret],\r\n        sameSite: \"lax\",\r\n        path: \"/\",\r\n        maxAge: 60 * 60 * 24 * 30,\r\n        httpOnly: true,\r\n    },\r\n});\r\nexport async function createUserSession(\r\n    userId: number,\r\n    redirectTo: string\r\n) {\r\n    const session = await storage.getSession();\r\n    session.set(\"userId\", userId);\r\n\r\n    return redirect(redirectTo, {\r\n        headers: {\r\n            \"Set-Cookie\": await storage.commitSession(session),\r\n        },\r\n    });\r\n}\r\nfunction getUserSession(request: Request) {\r\n    return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\nexport async function getUserId(request: Request) {\r\n    const session = await getUserSession(request);\r\n    const userId = session.get(\"userId\");\r\n    if (!userId || typeof userId !== \"number\") return null;\r\n    return userId;\r\n  }\r\nexport async function logout(request: Request) {\r\n    const session = await getUserSession(request);\r\n    return redirect(\"/login\", {\r\n      headers: {\r\n        \"Set-Cookie\": await storage.destroySession(session),\r\n      },\r\n    });\r\n  }", "import type { Prisma } from \"@prisma/client\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\n\r\ndeclare const global: Global & { db?: PrismaClient };\r\n\r\nlet db: PrismaClient;\r\n\r\nif (typeof window === \"undefined\") {\r\n  if (process.env[\"NODE_ENV\"] === \"production\") {\r\n    db = new PrismaClient();\r\n  } else {\r\n    if (!global.db) {\r\n      global.db = new PrismaClient();\r\n    }\r\n    db = global.db;\r\n  }\r\n}\r\n\r\nconst getUserByEmail = (email: string) => {\r\n  return db.users.findFirst({\r\n    where: { email },\r\n  });\r\n};\r\n\r\nconst getUserById = (id: number) => {\r\n  return db.users.findFirst({\r\n    where: { id },\r\n  });\r\n};\r\n\r\nconst deleteUserById = (id: number) => {\r\n  return db.users.delete({\r\n    where: { id },\r\n  });\r\n};\r\n\r\nconst deleteProductById = (product_id: number) => {\r\n  return db.products.delete({\r\n    where: { product_id },\r\n  });\r\n};\r\n\r\nconst deleteCustomerById = (customer_id: number) => {\r\n  return db.customers.delete({\r\n    where: { customer_id },\r\n  });\r\n};\r\n\r\nconst createCustomer = (\r\n  name: string,\r\n  tel: string,\r\n  email: string,\r\n  address: string\r\n) => {\r\n  return db.customers.create({\r\n    data: {\r\n      name,\r\n      tel,\r\n      email,\r\n      address,\r\n    },\r\n  });\r\n};\r\n\r\nconst createProduct = (\r\n  brand: string,\r\n  newbrand: string,\r\n  type: string,\r\n  newtype: string,\r\n  model: string,\r\n  newmodel: string,\r\n  price: string\r\n) => {\r\n  const isBrandSelected = brand && parseInt(brand) > 0;\r\n  const isTypeSelected = type && parseInt(type) > 0;\r\n  const isModelSelected = model && parseInt(model) > 0;\r\n\r\n  const newProduct: Prisma.productsCreateInput = {\r\n    brand: isBrandSelected\r\n      ? { connect: { brand_id: parseInt(brand) } }\r\n      : { create: { brand_name: newbrand } },\r\n    type: isTypeSelected\r\n      ? { connect: { type_id: parseInt(type) } }\r\n      : { create: { type_name: newtype } },\r\n    model: isModelSelected\r\n      ? { connect: { model_id: parseInt(model) } }\r\n      : { create: { model_name: newmodel } },\r\n    price: Number(price),\r\n  };\r\n\r\n  return db.products.create({ data: newProduct });\r\n};\r\n\r\nexport {\r\n  db,\r\n  getUserByEmail,\r\n  getUserById,\r\n  deleteUserById,\r\n  deleteProductById,\r\n  deleteCustomerById,\r\n  createCustomer,\r\n  createProduct\r\n};\r\n", "import { useContext } from \"react\";\r\nimport { UserContext } from \"~/root\";\r\n\r\nconst NavBar = () => {\r\n  const user: any = useContext(UserContext);\r\n  if (!user) return <div className=\"navbar bg-base-100\"></div>;\r\n  return (\r\n    <div className=\"navbar bg-base-100\">\r\n      <div className=\"navbar-start\">\r\n        <div className=\"dropdown\">\r\n          <label tabIndex={0} className=\"btn btn-ghost btn-circle\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-5 w-5\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6h16M4 12h16M4 18h7\"\r\n              />\r\n            </svg>\r\n          </label>\r\n          <ul\r\n            tabIndex={0}\r\n            className=\"prose prose-li:pl-0 prose-a:no-underline menu dropdown-content mt-2 p-2 shadow bg-base-300 rounded-box z-[1]\"\r\n          >\r\n            <li>\r\n              <a href=\"/\">Home</a>\r\n            </li>\r\n            <li>\r\n              {user.isAdmin ? (\r\n                <a href=\"/users\">Users</a>\r\n              ) : (\r\n                <a href={`/users/${user.id}`}>My details</a>\r\n              )}\r\n            </li>\r\n            <li>\r\n              <a href=\"/quotes\">Quotes</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/customers\">Customers</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/products\">Products</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"navbar-center\">\r\n        <img\r\n          className=\"h-10 w-auto mx-4\"\r\n          src=\"https://smartcctvuk.co.uk/img/logo-small.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"navbar-end\">\r\n        {!user ? (\r\n          <button\r\n            className=\"btn btn-ghost btn-circle tooltip tooltip-left\"\r\n            data-tip=\"login\"\r\n          >\r\n            <a href=\"/login\">\r\n              <svg\r\n                className=\"w-6 h-6 mx-auto\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\r\n                ></path>\r\n              </svg>\r\n            </a>\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <p className=\"hidden md:block\">Hi, {user.firstName}</p>\r\n            <button\r\n              className=\"btn btn-ghost btn-circle tooltip tooltip-left\"\r\n              data-tip=\"logout\"\r\n            >\r\n              <a href=\"/logout\">\r\n                <svg\r\n                  className=\"w-6 h-6 mx-auto\"\r\n                  fill=\"none\"\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth=\"2\"\r\n                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                  ></path>\r\n                </svg>\r\n              </a>\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n", "// routes/pdf.tsx\r\nimport { redirect } from \"@remix-run/node\";\r\n// this is your PDF document component created with React PDF\r\nimport { getQuoteBuffer } from \"~/components/QuotePDFDoc\";\r\nimport { getUserId } from \"~/utils/session\";\r\n\r\nexport const loader = async ({ request, params }: any) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  const { quoteid } = params;\r\n\r\n  // and transform it to a Buffer to send in the Response\r\n  let body: any = await getQuoteBuffer(quoteid);\r\n\r\n  // finally create the Response with the correct Content-Type header for\r\n  // a PDF\r\n  let headers = new Headers({ \"Content-Type\": \"application/pdf\" });\r\n  return new Response(body, { status: 200, headers });\r\n};\r\n", "import type { customers, quoted_products } from \"@prisma/client\";\r\nimport {\r\n  Document,\r\n  Image,\r\n  Page,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  renderToStream,\r\n} from \"@react-pdf/renderer\";\r\nimport { db } from \"~/utils/db\";\r\n\r\ntype QuotesType = {\r\n  quote_id: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  customer: customers;\r\n  labour: number;\r\n  quoted_products: quoted_products[];\r\n};\r\n\r\nexport const getQuoteBuffer = async (quoteid: string | undefined) => {\r\n  if (!quoteid) return Promise.reject({ error: \"quote id is not defined\" });\r\n  const id = quoteid as string;\r\n  let quote: any;\r\n  try {\r\n    quote = await db.quotes.findUnique({\r\n      where: {\r\n        quote_id: parseInt(id),\r\n      },\r\n      include: {\r\n        customer: true,\r\n        quoted_products: true,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    Promise.reject({ error });\r\n  }\r\n\r\n  let stream = await renderToStream(<QuotePDFDoc quote={quote} />);\r\n  // and transform it to a Buffer to send in the Response\r\n  return new Promise((resolve, reject) => {\r\n    let buffers: Uint8Array[] = [];\r\n    stream.on(\"data\", (data) => {\r\n      buffers.push(data);\r\n    });\r\n    stream.on(\"end\", () => {\r\n      resolve(Buffer.concat(buffers));\r\n    });\r\n    stream.on(\"error\", reject);\r\n  });\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    fontSize: 12,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    borderBottomColor: \"#000000\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  logo: {\r\n    width: 200,\r\n  },\r\n  customerRow: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 12,\r\n  },\r\n  customerField: {\r\n    width: 200,\r\n  },\r\n  customerValue: {},\r\n  table: {\r\n    marginTop: 5,\r\n    borderWidth: 1,\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    borderTopWidth: 1,\r\n  },\r\n  tableCell: {\r\n    padding: \"5 10\",\r\n    width: \"15%\",\r\n    textAlign: \"right\",\r\n    borderLeftWidth: 1,\r\n  },\r\n  endRow: {\r\n    flexDirection: \"row\",\r\n  },\r\n  endField: {\r\n    padding: \"5 10\",\r\n    width: \"85%\",\r\n    textAlign: \"right\",\r\n  },\r\n  endValue: {\r\n    padding: \"5 10\",\r\n    width: \"15%\",\r\n    textAlign: \"right\",\r\n    borderLeftWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderRightWidth: 1,\r\n  },\r\n});\r\n\r\nconst QuotePDFDoc = ({ quote }: { quote: QuotesType }) => {\r\n  const { quote_id, createdAt, customer, labour, quoted_products } = quote;\r\n  const { name, tel, email, address } = customer;\r\n  const date = new Date(createdAt);\r\n\r\n  let grandTotal = 0;\r\n  quoted_products.forEach(\r\n    ({ price, quantity }) => (grandTotal += price * quantity)\r\n  );\r\n  grandTotal += labour;\r\n\r\n  return (\r\n    <Document title={`Smart CCTV quote #${quote_id}, for ${name}`}>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.header}>\r\n          <Image\r\n            src=\"https://smartcctvuk.co.uk/img/logo-small.png\"\r\n            style={styles.logo}\r\n          />\r\n          <Text style={{ marginRight: 20 }}>{date.toDateString()}</Text>\r\n        </View>\r\n        <View style={{ margin: \"15 20\" }}>\r\n          <View style={styles.customerRow}>\r\n            <Text style={styles.customerField}>Name:</Text>\r\n            <Text style={styles.customerValue}>{name}</Text>\r\n          </View>\r\n          <View style={styles.customerRow}>\r\n            <Text style={styles.customerField}>Address:</Text>\r\n            <Text style={styles.customerValue}>{address}</Text>\r\n          </View>\r\n          <View style={styles.customerRow}>\r\n            <Text style={styles.customerField}>Tel:</Text>\r\n            <Text style={styles.customerValue}>{tel}</Text>\r\n          </View>\r\n          <View style={styles.customerRow}>\r\n            <Text style={styles.customerField}>Email:</Text>\r\n            <Text style={styles.customerValue}>{email}</Text>\r\n          </View>\r\n          <View style={styles.table}>\r\n            <View style={[styles.tableRow, { borderTop: 0 }]}>\r\n              <View\r\n                style={[\r\n                  styles.tableCell,\r\n                  { textAlign: \"left\", width: \"55%\", borderLeftWidth: 0 },\r\n                ]}\r\n              >\r\n                <Text>Product</Text>\r\n              </View>\r\n              <View style={styles.tableCell}>\r\n                <Text>Quantity</Text>\r\n              </View>\r\n              <View style={styles.tableCell}>\r\n                <Text>Unit price</Text>\r\n              </View>\r\n              <View style={styles.tableCell}>\r\n                <Text>Total price</Text>\r\n              </View>\r\n            </View>\r\n            {quoted_products &&\r\n              quoted_products.map(\r\n                ({ invprod_id, name, quantity, price }: quoted_products) => (\r\n                  <View key={invprod_id} style={styles.tableRow}>\r\n                    <View\r\n                      style={[\r\n                        styles.tableCell,\r\n                        { textAlign: \"left\", width: \"55%\", borderLeftWidth: 0 },\r\n                      ]}\r\n                    >\r\n                      <Text>{name}</Text>\r\n                    </View>\r\n                    <View style={styles.tableCell}>\r\n                      <Text>\u00A3{quantity}.00</Text>\r\n                    </View>\r\n                    <View style={styles.tableCell}>\r\n                      <Text>\u00A3{price}.00</Text>\r\n                    </View>\r\n                    <View style={styles.tableCell}>\r\n                      <Text>\u00A3{price * quantity}.00</Text>\r\n                    </View>\r\n                  </View>\r\n                )\r\n              )}\r\n          </View>\r\n          <View style={styles.endRow}>\r\n            <Text style={styles.endField}>Labour:</Text>\r\n            <Text style={styles.endValue}>\u00A3{labour}.00</Text>\r\n          </View>\r\n          <View style={styles.endRow}>\r\n            <Text style={styles.endField}>Grand total:</Text>\r\n            <Text style={styles.endValue}>\u00A3{grandTotal}.00</Text>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default QuotePDFDoc;\r\n", "import type { customers, quoted_products } from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useActionData, useLoaderData, useNavigation } from \"@remix-run/react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"~/components/Modal\";\r\nimport { getQuoteBuffer } from \"~/components/QuotePDFDoc\";\r\nimport ShareQuoteForm from \"~/components/ShareQuoteForm\";\r\nimport { mailer } from \"~/entry.server\";\r\nimport { SITE_TITLE, UserContext } from \"~/root\";\r\nimport { db } from \"~/utils/db\";\r\nimport { sendEmail } from \"~/utils/mailer\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\r\nimport { validateEmail } from \"~/utils/validations\";\r\n\r\ntype QuotesType = {\r\n  quote_id: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  customer: customers;\r\n  labour: number;\r\n  quoted_products: quoted_products[];\r\n};\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - View quote ` }];\r\n};\r\n\r\nexport const loader = async ({ request, params }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  const { quoteid } = params;\r\n  const id = quoteid as string;\r\n  try {\r\n    const quote = await db.quotes.findUnique({\r\n      where: {\r\n        quote_id: parseInt(id),\r\n      },\r\n      include: {\r\n        customer: true,\r\n        quoted_products: true,\r\n      },\r\n    });\r\n    return json({ quote });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const { _action, ...values } = Object.fromEntries(formData);\r\n  switch (_action) {\r\n    case \"share_quote\":\r\n      const { quoteid, customerEmail, userEmail, otherEmails } = values;\r\n      const shareActionErrors: any = {};\r\n\r\n      if (!customerEmail && !userEmail && !otherEmails)\r\n        shareActionErrors.msg = \"One option has to be selected or defined!\";\r\n\r\n      if (Object.values(shareActionErrors).some(Boolean))\r\n        return { shareActionErrors };\r\n\r\n      const othEmails = otherEmails\r\n        ? String(otherEmails)\r\n            .split(\",\")\r\n            .map((othEmail: string) => {\r\n              const trimmed = othEmail.trim();\r\n              shareActionErrors.msg = validateEmail(trimmed);\r\n              return trimmed;\r\n            })\r\n        : [];\r\n\r\n      if (Object.values(shareActionErrors).some(Boolean))\r\n        return { shareActionErrors };\r\n\r\n      const allEmails: string[] = [...othEmails];\r\n\r\n      if (customerEmail) allEmails.push(String(customerEmail));\r\n      if (userEmail) allEmails.push(String(userEmail));\r\n\r\n      const pdfBuffer = await getQuoteBuffer(quoteid as string);\r\n\r\n      const mailResponse: any = await sendEmail(allEmails, pdfBuffer);\r\n      if (mailResponse.error)\r\n        return { shareActionErrors: { msg: mailResponse.error } };\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        console.log(\"message sent:\", mailer.getTestMessageUrl(mailResponse));\r\n      }\r\n\r\n      if (mailResponse.accepted && mailResponse.accepted.length > 0)\r\n        return { shareActionErrors: { msg: \"mail sent!\" } };\r\n      return {\r\n        shareActionErrors: {\r\n          msg: \"something went wrong (vague, I know, but I haven't handled this error)\",\r\n        },\r\n      };\r\n  }\r\n  return {};\r\n}\r\n\r\nconst prettifyDateString = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return date.toDateString();\r\n};\r\n\r\nexport default function QuoteId() {\r\n  const user: any = useContext(UserContext);\r\n  const { quote }: { quote: QuotesType } = useLoaderData();\r\n  const { createdAt, labour, customer, quoted_products } = quote;\r\n  const navigation = useNavigation();\r\n  const data = useActionData();\r\n  const [grandTotal, setGrandTotal] = useState(0);\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setGrandTotal(() => {\r\n      let subTotals = 0;\r\n      quoted_products.forEach(\r\n        ({ price, quantity }) => (subTotals += price * quantity)\r\n      );\r\n      return subTotals + labour;\r\n    });\r\n  }, [labour, quoted_products]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quote</h2>\r\n      <p>Created on: {prettifyDateString(createdAt)}</p>\r\n      <h3>Customer</h3>\r\n      <p>Name: {customer.name}</p>\r\n      <p>Address: {customer.address}</p>\r\n      <p>Tel: {customer.tel}</p>\r\n      <p>Email: {customer.email}</p>\r\n      <h3>Products</h3>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr className=\"hidden md:table-row\">\r\n            <th>Name</th>\r\n            <th>Quantity</th>\r\n            <th className=\"text-right\">Unit Price (\u00A3)</th>\r\n            <th className=\"text-right\">Subtotal (\u00A3)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {quoted_products &&\r\n            quoted_products.map(\r\n              ({ invprod_id, name, quantity, price }: quoted_products) => {\r\n                return (\r\n                  <tr key={invprod_id} className={resTRClass}>\r\n                    <td data-label=\"Name\" className={resTDClass}>\r\n                      {name}\r\n                    </td>\r\n                    <td data-label=\"Quantity\" className={resTDClass}>\r\n                      {quantity}\r\n                    </td>\r\n                    <td\r\n                      data-label=\"Unit Price (\u00A3)\"\r\n                      className={`${resTDClass} md:text-right`}\r\n                    >\r\n                      {price}\r\n                    </td>\r\n                    <td\r\n                      data-label=\"Subtotal (\u00A3)\"\r\n                      className={`${resTDClass} md:text-right`}\r\n                    >\r\n                      {price * quantity}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            )}\r\n          <tr className={resTRClass}>\r\n            <td colSpan={3} className=\"hidden md:table-cell\"></td>\r\n            <td className=\"md:text-right\">Labour cost (\u00A3): {labour}</td>\r\n          </tr>\r\n          <tr className={resTRClass}>\r\n            <td colSpan={3} className=\"hidden md:table-cell\"></td>\r\n            <td className=\"md:text-right\">Total cost (\u00A3): {grandTotal}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"flex justify-end mt-4 gap-4\">\r\n        <a\r\n          href={`/quotes/${quote.quote_id}/generatedquote`}\r\n          target=\"_blank\"\r\n          className=\"btn\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Generate\r\n        </a>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            setShowShareModal(true);\r\n          }}\r\n        >\r\n          Share\r\n        </button>\r\n        <a href=\"/quotes\" className=\"btn\">\r\n          Back\r\n        </a>\r\n      </div>\r\n      <Modal open={showShareModal}>\r\n        <h3 className=\"mb-4\">Share with:</h3>\r\n        {showShareModal && (\r\n          <ShareQuoteForm\r\n            quoteid={quote.quote_id}\r\n            customer={customer}\r\n            user={user}\r\n            navigation={navigation}\r\n            formErrors={data?.shareActionErrors}\r\n            onCancel={() => {\r\n              setShowShareModal(false);\r\n              if (data) data.shareActionErrors = {};\r\n            }}\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport cn from \"classnames\";\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  open: boolean;\r\n};\r\n\r\nconst Modal = ({ children, open }: Props) => {\r\n  const modalClass = cn({\r\n    \"modal modal-bottom sm:modal-middle\": true,\r\n    \"modal-open\": open,\r\n    hidden: !open,\r\n  });\r\n  return (\r\n    <div className={modalClass}>\r\n      <div className=\"modal-box prose\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n", "import { Form } from \"@remix-run/react\";\r\nimport type { customers, users } from \"@prisma/client\";\r\nimport type { Navigation } from \"@remix-run/router\";\r\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\r\n\r\nconst ShareQuoteForm = ({\r\n  quoteid,\r\n  navigation,\r\n  customer,\r\n  user,\r\n  onCancel,\r\n  formErrors,\r\n}: {\r\n  quoteid: number;\r\n  navigation: Navigation;\r\n  customer: customers;\r\n  user: users;\r\n  onCancel: Function;\r\n  formErrors: any;\r\n}) => {\r\n\r\n  return (\r\n    <Form replace method=\"post\" className={formClass}>\r\n      <input type=\"hidden\" value={quoteid} name=\"quoteid\" id=\"quoteid\" />\r\n      <fieldset disabled={navigation.state === \"submitting\"}>\r\n        <div className=\"form-control\">\r\n          <label className=\"label cursor-pointer\">\r\n            <span className=\"label-text\">\r\n              {customer.name} ({customer.email})\r\n            </span>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"checkbox\"\r\n              name=\"customerEmail\"\r\n              id=\"customerEmail\"\r\n              value={customer.email}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label className=\"label cursor-pointer\">\r\n            <span className=\"label-text\">\r\n              {user.firstName} ({user.email})\r\n            </span>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"checkbox\"\r\n              name=\"userEmail\"\r\n              id=\"userEmail\"\r\n              value={user.email}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label className=\"label\">\r\n            <span className=\"label-text\">Other(s)</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"otherEmails\"\r\n            id=\"otherEmails\"\r\n            placeholder=\"john@example.com,jill@example.com,etc\"\r\n            className={inputClass}\r\n          />\r\n          {formErrors?.msg && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.msg}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4 mb-2\">\r\n          <button\r\n            className=\"btn\"\r\n            type=\"submit\"\r\n            name=\"_action\"\r\n            value=\"share_quote\"\r\n          >\r\n            {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n          </button>\r\n          <button\r\n            className=\"btn ml-3\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ShareQuoteForm;\r\n", "export const contentBodyClass = \"prose md:max-w-screen-xl md:mx-auto p-6\";\r\nexport const formClass = \"bg-base-300 px-4 py-2 rounded-lg\";\r\nexport const inputClass = \"input input-bordered w-full\";\r\nexport const selectClass = \"select select-bordered w-full\";\r\nexport const resTRClass = \"flex flex-col md:table-row\";\r\nexport const resTDClass =\r\n  \"before:content-[attr(data-label)] before:block before:mb-1 md:before:hidden\";\r\n", "import { mailer } from \"~/entry.server\";\r\n\r\nexport async function sendEmail(to: string[], attachmentBuffer: any) {\r\n  const transporter = mailer.createTransport({\r\n    host: process.env.EMAIL_HOST,\r\n    port: parseInt(process.env.EMAIL_PORT || \"587\"),\r\n    secure: process.env.EMAIL_SECURE === \"1\" || false,\r\n    // secure: false,\r\n    auth: {\r\n      user: process.env.EMAIL_USER,\r\n      pass: process.env.EMAIL_PASS,\r\n    },\r\n  });\r\n\r\n  let isSMTPConnected;\r\n  try {\r\n    isSMTPConnected = await transporter.verify();\r\n  } catch (error: any) {\r\n    if (error.code === \"ETIMEDOUT\")\r\n      return { error: \"error: reeting never received!\" };\r\n    return { error: \"unable to verify mail server connection!\" };\r\n  }\r\n  if (!isSMTPConnected)\r\n    return { error: \"unable to verify mail server connection!\" };\r\n\r\n  return transporter.sendMail({\r\n    from: \"noreply@smartcctvuk.co.uk\",\r\n    to,\r\n    subject: \"Your Smart CCTV UK Quote\",\r\n    html: `<p>Please find your quotation attached.</p>\r\n    <p>For further enquiries please contact us at <a href=\"mailto:info@smartcctvuk.co.uk\">info@smartcctvuk.co.uk</a>, or call us on 01212710480 or 07486320798</p>\r\n    <p>Kind regards,<br>Smart CCTV UK<br><a href=\"https://www.smartcctvuk.co.uk\">https://www.smartcctvuk.co.uk</a></p>`,\r\n    attachments: [\r\n      {\r\n        filename: \"quote.pdf\",\r\n        content: attachmentBuffer,\r\n      },\r\n    ],\r\n  });\r\n}\r\n", "export const validateTel = (tel: string) => {\r\n  if (!tel) {\r\n    return \"Tel is Required!\";\r\n  } else if (!/^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/.test(tel)) {\r\n    return \"Invalid tel, needs to be a 11 digit number!\";\r\n  }\r\n};\r\n\r\nexport const validateName = (name: string) => {\r\n  if (!name) {\r\n    return \"Name is Required!\";\r\n  } else if (!/^[a-z A-Z]+$/.test(name)) {\r\n    return \"Invalid name!\";\r\n  }\r\n};\r\n\r\nexport const validateFname = (firstname: string) => {\r\n  if (!firstname) {\r\n    return \"First name is Required!\";\r\n  } else if (!/^[a-zA-Z]+$/.test(firstname)) {\r\n    return \"Invalid First name!\";\r\n  }\r\n};\r\n\r\nexport const validateLname = (lastname: string) => {\r\n  if (!lastname) {\r\n    return \"Last name is Required!\";\r\n  } else if (!/^[a-zA-Z]+$/.test(lastname)) {\r\n    return \"Invalid Last name!\";\r\n  }\r\n};\r\n\r\nexport const validateEmail = (email: string) => {\r\n  if (!email) {\r\n    return \"Email is Required!\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n    return \"Invalid emaill!\";\r\n  }\r\n};\r\n\r\nexport const validatePassword = (password: string) => {\r\n  if (!password) {\r\n    return \"Password is Required!\";\r\n  } else if (\r\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(\r\n      password\r\n    )\r\n  ) {\r\n    return \"Weak password! A strong password should contain atleast 8 characters, 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character.\";\r\n  }\r\n};\r\n\r\nexport const validateCustomerData = ({ name, tel, email, address }: any) => {\r\n  const errors: any = {};\r\n  errors.name = validateName(`${name}`);\r\n  errors.tel = validateTel(`${tel}`);\r\n  errors.email = validateEmail(`${email}`);\r\n  if (!address) errors.address = \"address is required!\";\r\n  return errors;\r\n};\r\n\r\nexport const validateProductData = ({\r\n  brand,\r\n  newbrand,\r\n  type,\r\n  newtype,\r\n  model,\r\n  newmodel,\r\n  price,\r\n}: any) => {\r\n  const errors: any = {};\r\n  const isBrandSelected = brand && parseInt(`${brand}`) > 0;\r\n  const isTypeSelected = type && parseInt(`${type}`) > 0;\r\n  const isModelSelected = model && parseInt(`${model}`) > 0;\r\n  if (!isBrandSelected && !newbrand) {\r\n    errors.brand = \"a brand must be selected or defined\";\r\n  }\r\n  if (!isTypeSelected && !newtype) {\r\n    errors.type = \"a type must be selected or defined\";\r\n  }\r\n  if (!isModelSelected && !newmodel) {\r\n    errors.model = \"a model must be selected or defined\";\r\n  }\r\n  if (!price || parseInt(price) <= 0) {\r\n    errors.price = \"a valid price must be defined\";\r\n  }\r\n  return errors;\r\n};\r\n", "import type { ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { db } from \"~/utils/db\";\r\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\r\nimport { validateEmail, validateFname, validateLname, validatePassword } from \"~/utils/validations\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Register` }];\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n\r\n  const fname = formData.get(\"firstname\") as string;\r\n  const lname = formData.get(\"lastname\") as string;\r\n  const email = formData.get(\"email\") as string;\r\n  const rpassword = formData.get(\"password\") as string;\r\n\r\n  const formErrors = {\r\n    fname: validateFname(fname),\r\n    lname: validateLname(lname),\r\n    email: validateEmail(email),\r\n    password: validatePassword(rpassword),\r\n  };\r\n  //if there are errors, we return the form errors\r\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\r\n\r\n  // generate enctypted password\r\n  const password = await bcrypt.hash(rpassword, 10);\r\n\r\n  const currUsers = await db.users.findMany()\r\n  const isFirst = currUsers.length === 0;\r\n\r\n  try {\r\n    await db.users.create({\r\n      data: {\r\n        firstName: fname,\r\n        lastName: lname,\r\n        email: email,\r\n        password: password,\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        isAdmin: isFirst ? 1 : 0,\r\n        isApproved: isFirst ? 1 : 0\r\n      },\r\n    });\r\n    return redirect(\"/login\");\r\n  } catch (err: any) {\r\n    if (err.code === \"P2002\") {\r\n      formErrors.email = \"email already registered!\";\r\n      return { formErrors };\r\n    }\r\n    console.error(err)\r\n  }\r\n}\r\n\r\n// Note the \"action\" export name, this will handle our form POST\r\n\r\nexport default function Register() {\r\n  const navigation = useNavigation();\r\n  const data = useActionData();\r\n\r\n  return (\r\n    <div className=\"grid place-items-center\">\r\n      <div className=\"w-full max-w-xs\">\r\n        <Form method=\"post\" className={formClass}>\r\n          <fieldset disabled={navigation.state === \"submitting\"}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"firstname\">\r\n                <span className=\"label-text\">First name</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                id=\"firstname\"\r\n                name=\"firstname\"\r\n                type=\"text\"\r\n                placeholder=\"First name\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.fname && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.fname}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"lastname\">\r\n                <span className=\"label-text\">Last name</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                id=\"lastname\"\r\n                name=\"lastname\"\r\n                type=\"text\"\r\n                placeholder=\"Last name\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.lname && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.lname}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"email\">\r\n                <span className=\"label-text\">Email</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.email && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.email}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label className=\"label\" htmlFor=\"password\">\r\n                <span className=\"label-text\">Password</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"******************\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.password && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.password}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-6 mb-2\">\r\n              <button className=\"btn\" type=\"submit\">\r\n                {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n              </button>\r\n              <a href=\"/login\" className=\"btn ml-3\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </fieldset>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { customers, quoted_products } from \"@prisma/client\";\r\nimport type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { db } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\r\n\r\ntype QuotesType = {\r\n  quote_id: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  customer: customers;\r\n  labour: number;\r\n  quoted_products: quoted_products[];\r\n};\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Quotes` }];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  try {\r\n    const quotes = await db.quotes.findMany({\r\n      include: {\r\n        customer: true,\r\n        quoted_products: true,\r\n      },\r\n    });\r\n    return json({ quotes });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nconst prettifyDateString = (dateString: string) => {\r\n  const date = new Date(dateString);\r\n  return date.toDateString();\r\n};\r\n\r\nexport default function QuotesIndex() {\r\n  const { quotes } = useLoaderData();\r\n\r\n  return (\r\n    <>\r\n      {quotes && quotes.length ? (\r\n        <table className=\"table static\">\r\n          <thead>\r\n            <tr className=\"hidden md:table-row\">\r\n              <th>ID</th>\r\n              <th>Date</th>\r\n              <th>Customer</th>\r\n              <th>Amount (\u00A3)</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {quotes &&\r\n              quotes.map(\r\n                ({\r\n                  quote_id,\r\n                  createdAt,\r\n                  customer,\r\n                  quoted_products,\r\n                  labour,\r\n                }: QuotesType) => {\r\n                  return (\r\n                    <tr className={resTRClass} key={quote_id}>\r\n                      <td data-label=\"ID\" className={resTDClass}>\r\n                        {quote_id}\r\n                      </td>\r\n                      <td data-label=\"Date\" className={resTDClass}>\r\n                        {prettifyDateString(createdAt)}\r\n                      </td>\r\n                      <td data-label=\"Customer\" className={resTDClass}>\r\n                        {customer.name}\r\n                      </td>\r\n                      <td data-label=\"Amount (\u00A3)\" className={resTDClass}>\r\n                        {quoted_products.reduce(\r\n                          (partialSum, qp) =>\r\n                            partialSum + qp.price * qp.quantity,\r\n                          0\r\n                        ) + labour}\r\n                      </td>\r\n                      <td data-label=\"Actions\" className={resTDClass}>\r\n                        <div className=\"btn-group\">\r\n                          <a\r\n                            href={`quotes/${quote_id}`}\r\n                            className=\"btn\"\r\n                          >\r\n                            View\r\n                          </a>\r\n                          <button className=\"btn\">\r\n                            Delete\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                }\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No quotes found...</p>\r\n      )}\r\n      <div className=\"flex justify-end mt-4\">\r\n        <a href=\"/quotes/create\" className=\"btn\">\r\n          Add new quote +\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n", "import type {\r\n  Prisma,\r\n  customers,\r\n  product_brands,\r\n  product_models,\r\n  product_types,\r\n  products,\r\n} from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigation,\r\n} from \"@remix-run/react\";\r\nimport { useEffect, useReducer, useState } from \"react\";\r\nimport CreateCustomerForm from \"~/components/CreateCustomerForm\";\r\nimport CreateProductForm from \"~/components/CreateProductForm\";\r\nimport Modal from \"~/components/Modal\";\r\nimport QuoteProductRow from \"~/components/QuoteProductRow\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { createCustomer, createProduct, db } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { formClass, inputClass, resTRClass, selectClass } from \"~/utils/styleClasses\";\r\nimport { validateCustomerData, validateProductData } from \"~/utils/validations\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Create quote` }];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  try {\r\n    const [brands, types, models, customers, products]: [\r\n      brands: product_brands[],\r\n      types: product_types[],\r\n      models: product_models[],\r\n      customers: customers[],\r\n      products: products[]\r\n    ] = await Promise.all([\r\n      db.product_brands.findMany(),\r\n      db.product_types.findMany(),\r\n      db.product_models.findMany(),\r\n      db.customers.findMany(),\r\n      db.products.findMany(),\r\n    ]);\r\n    return json({ brands, types, models, customers, products });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const { _action, ...values } = Object.fromEntries(formData);\r\n  switch (_action) {\r\n    case \"create_customer\":\r\n      const { name, tel, email, address } = values;\r\n      const customerActionErrors: any = validateCustomerData(values);\r\n\r\n      if (Object.values(customerActionErrors).some(Boolean))\r\n        return { customerActionErrors };\r\n\r\n      try {\r\n        const createdCustomer = await createCustomer(\r\n          `${name}`,\r\n          `${tel}`,\r\n          `${email}`,\r\n          `${address}`\r\n        );\r\n        return { createdCustomer };\r\n      } catch (error) {\r\n        console.log({ error });\r\n        customerActionErrors.info =\r\n          \"There was a problem creating the customer...\";\r\n        return { customerActionErrors };\r\n      }\r\n    case \"create_product\":\r\n      const { brand, newbrand, type, newtype, model, newmodel, price } = values;\r\n      const productActionErrors: any = validateProductData(values);\r\n\r\n      if (Object.values(productActionErrors).some(Boolean))\r\n        return { productActionErrors };\r\n      try {\r\n        const createdProduct = await createProduct(\r\n          `${brand}`,\r\n          `${newbrand}`,\r\n          `${type}`,\r\n          `${newtype}`,\r\n          `${model}`,\r\n          `${newmodel}`,\r\n          `${price}`\r\n        );\r\n        return { createdProduct };\r\n      } catch (error) {\r\n        console.log({ error });\r\n        productActionErrors.info =\r\n          \"There was a problem creating the product...\";\r\n        return { productActionErrors };\r\n      }\r\n    case \"create_quote\":\r\n      const { customer, labour, prodcount, ...productValues } = values;\r\n      const quoteActionErrors: any = {};\r\n\r\n      if (!customer)\r\n        quoteActionErrors.customer = \"you must select or define a customer!\";\r\n\r\n      if (Object.keys(productValues).length === 0)\r\n        quoteActionErrors.product =\r\n          \"you must select or define at least one product!\";\r\n\r\n      if (Object.values(quoteActionErrors).some(Boolean))\r\n        return { quoteActionErrors };\r\n\r\n      // first loop: compile promises to get prods by Id\r\n      const prodPromiseCollection: any[] = [];\r\n      [...Array(parseInt(`${prodcount}`))].forEach((e, i) => {\r\n        const product_id = parseInt(productValues[`p_${i + 1}_id`] as string);\r\n        if (!product_id) return true;\r\n        prodPromiseCollection.push(\r\n          db.products.findUnique({\r\n            where: { product_id },\r\n            include: {\r\n              brand: true,\r\n              model: true,\r\n              type: true,\r\n            },\r\n          })\r\n        );\r\n      });\r\n\r\n      // retrieves products from compiled promises\r\n      let retrievedSelectedProds = [];\r\n      try {\r\n        retrievedSelectedProds = await Promise.all(prodPromiseCollection);\r\n      } catch (error) {\r\n        console.log({ error });\r\n        quoteActionErrors.info =\r\n          \"there was a problem saving the quote, please try again later\";\r\n        return { quoteActionErrors };\r\n      }\r\n\r\n      // loops products and constructs quoted products\r\n      const quotedProducts = retrievedSelectedProds.map((product: any, i) => {\r\n        const { brand_name, model_name, type_name, price } = product;\r\n        const quantity = parseInt(productValues[`p_${i + 1}_qty`] as string);\r\n        return {\r\n          name: `${brand_name} - ${type_name} - ${model_name}`,\r\n          quantity,\r\n          price,\r\n        };\r\n      });\r\n\r\n      const newQuote: Prisma.quotesCreateInput = {\r\n        customer: {\r\n          connect: {\r\n            customer_id: parseInt(`${customer}`),\r\n          },\r\n        },\r\n        quoted_products: {\r\n          createMany: {\r\n            data: quotedProducts,\r\n          },\r\n        },\r\n        labour: Number(`${labour}`),\r\n      };\r\n\r\n      try {\r\n        await db.quotes.create({ data: newQuote });\r\n        return redirect(\"/quotes\");\r\n      } catch (error) {\r\n        console.log({ error });\r\n        quoteActionErrors.info =\r\n          \"there was a problem saving the quote, please try again later\";\r\n        return { quoteActionErrors };\r\n      }\r\n  }\r\n\r\n  return {};\r\n}\r\n\r\nexport default function QuotesCreate() {\r\n  const navigation = useNavigation();\r\n  const {\r\n    customers,\r\n    products,\r\n    brands,\r\n    types,\r\n    models,\r\n  }: {\r\n    customers: customers[];\r\n    products: products[];\r\n    brands: product_brands[];\r\n    types: product_types[];\r\n    models: product_models[];\r\n  } = useLoaderData();\r\n  const data = useActionData();\r\n  const [isNewCustomer, setIsNewCustomer] = useState(false);\r\n  const [customerSelectValue, setCustomerSelectValue] = useState(\"\");\r\n  const [productCount, setProductCount] = useState(1);\r\n  const [labour, setLabour] = useState(0);\r\n  const [grandtotal, setGrandtotal] = useState(0);\r\n  const [newProductRow, setNewProductRow] = useState(0);\r\n  const [isNewProduct, setIsNewProduct] = useState(false);\r\n  const [productSelectValues, dispatchPSV] = useReducer(\r\n    (state: any[], action: any) => {\r\n      const { type, ...values } = action;\r\n      switch (type) {\r\n        case \"update\":\r\n          if (values.product_id === \"-1\") {\r\n            setNewProductRow(values.row_id);\r\n            setIsNewProduct(true);\r\n          } else {\r\n            setNewProductRow(0);\r\n            setIsNewProduct(false);\r\n          }\r\n          return state.map((psv) => {\r\n            if (psv.row_id === values.row_id) {\r\n              return { ...psv, ...values };\r\n            }\r\n            return { ...psv };\r\n          });\r\n        case \"add\":\r\n          const doesExist = Boolean(\r\n            state.find((psv) => psv.row_id === values.row_id)\r\n          );\r\n          if (!doesExist) return [...state, { ...values }];\r\n          return state;\r\n        case \"remove\":\r\n          return state.filter((psv) => psv.row_id !== values.row_id);\r\n        default:\r\n          return state;\r\n      }\r\n    },\r\n    [{ row_id: \"1\", product_id: \"\", qty: 1, price: 0 }]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setGrandtotal(\r\n      productSelectValues.reduce(\r\n        (partialSum, a: any) => partialSum + a.price * a.qty,\r\n        0\r\n      ) + labour\r\n    );\r\n  }, [productSelectValues, labour]);\r\n\r\n  useEffect(() => {\r\n    setIsNewCustomer(customerSelectValue === \"-1\");\r\n  }, [customerSelectValue]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (data.createdCustomer)\r\n      setCustomerSelectValue(`${data.createdCustomer.customer_id}`);\r\n    if (data.createdProduct) {\r\n      dispatchPSV({\r\n        type: \"update\",\r\n        row_id: newProductRow,\r\n        product_id: `${data.createdProduct.product_id}`,\r\n      });\r\n    }\r\n  }, [data, newProductRow]);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4 text-center\">Create a new quote</h2>\r\n      <Form method=\"post\" className={formClass}>\r\n        {data?.quoteActionErrors?.info && (\r\n          <label className=\"label\">\r\n            <span className=\"label-text-alt text-error\">\r\n              {data.quoteActionErrors.info}\r\n            </span>\r\n          </label>\r\n        )}\r\n        <input\r\n          type=\"hidden\"\r\n          name=\"prodcount\"\r\n          id=\"prodcount\"\r\n          value={productCount}\r\n        />\r\n        <fieldset disabled={navigation.state === \"submitting\"}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"label\" htmlFor=\"customer\">\r\n              <span className=\"label-text\">Customer</span>\r\n            </label>\r\n            <select\r\n              className={selectClass}\r\n              name=\"customer\"\r\n              id=\"customer\"\r\n              value={customerSelectValue}\r\n              onChange={(e) => {\r\n                setCustomerSelectValue(e.target.value);\r\n              }}\r\n            >\r\n              <option disabled value=\"\">\r\n                Select a customer...\r\n              </option>\r\n              {customers.map(\r\n                ({ customer_id, name, tel, email, address }: customers) => {\r\n                  return (\r\n                    <option key={customer_id} value={customer_id}>\r\n                      {name} - {tel} - {email} - {address}\r\n                    </option>\r\n                  );\r\n                }\r\n              )}\r\n              <option value=\"-1\">Add new customer +</option>\r\n            </select>\r\n            {data?.quoteActionErrors?.customer && (\r\n              <label className=\"label\">\r\n                <span className=\"label-text-alt text-error\">\r\n                  {data.quoteActionErrors.customer}\r\n                </span>\r\n              </label>\r\n            )}\r\n          </div>\r\n        </fieldset>\r\n        <fieldset disabled={navigation.state === \"submitting\"}>\r\n          <label className=\"label\">\r\n            <span className=\"label-text\">Products</span>\r\n          </label>\r\n          {data?.quoteActionErrors?.product && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {data.quoteActionErrors.product}\r\n              </span>\r\n            </label>\r\n          )}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"hidden md:table-row\">\r\n                <th>Product</th>\r\n                <th className=\"w-[100px]\">Quantity</th>\r\n                <th className=\"text-right w-[150px]\">Unit (\u00A3)</th>\r\n                <th className=\"text-right w-[150px]\">Subtotal (\u00A3)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {[...Array(productCount)].map((e, i) => (\r\n                <QuoteProductRow\r\n                  key={i}\r\n                  rowId={`${i + 1}`}\r\n                  products={products}\r\n                  productSelectValues={productSelectValues}\r\n                  dispatchPSV={dispatchPSV}\r\n                />\r\n              ))}\r\n              <tr className={resTRClass}>\r\n                <td colSpan={4}>\r\n                  <div className=\"flex md:justify-end join\">\r\n                    <button\r\n                      className=\"btn join-item\"\r\n                      disabled={productCount === 1}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setProductCount((pCount) => {\r\n                          dispatchPSV({\r\n                            type: \"remove\",\r\n                            row_id: `${pCount}`,\r\n                          });\r\n                          return pCount - 1;\r\n                        });\r\n                      }}\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <button\r\n                      className=\"btn join-item\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setProductCount((pCount) => {\r\n                          dispatchPSV({\r\n                            type: \"add\",\r\n                            row_id: `${pCount + 1}`,\r\n                            product_id: \"\",\r\n                            qty: 1,\r\n                            price: 0,\r\n                          });\r\n                          return pCount + 1;\r\n                        });\r\n                      }}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr className={resTRClass}>\r\n                <td colSpan={2} className=\"hidden md:table-cell\"></td>\r\n                <td className=\"flex md:table-cell\">\r\n                  <label className=\"label md:justify-end\" htmlFor=\"labour\">\r\n                    <span className=\"label-text\">Labour cost (\u00A3):</span>\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    name=\"labour\"\r\n                    id=\"labour\"\r\n                    value={labour}\r\n                    className={`${inputClass} md:text-right`}\r\n                    onChange={(e) => {\r\n                      setLabour(parseInt(e.target.value));\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr className={resTRClass}>\r\n                <td colSpan={2} className=\"hidden md:table-cell\"></td>\r\n                <td>\r\n                  <label className=\"label md:justify-end\">\r\n                    <span className=\"label-text\">Total cost (\u00A3):</span>\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <label className=\"label md:justify-end\">\r\n                    <span className=\"label-text\">{grandtotal}</span>\r\n                  </label>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div className=\"flex md:justify-end mt-4 mb-2\">\r\n            <button\r\n              className=\"btn\"\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value=\"create_quote\"\r\n            >\r\n              {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n            </button>\r\n            <a className=\"btn ml-4\" href=\"/quotes\">\r\n              Cancel\r\n            </a>\r\n          </div>\r\n        </fieldset>\r\n      </Form>\r\n      <Modal open={isNewCustomer}>\r\n        <h3 className=\"mb-4\">Create new customer</h3>\r\n        {isNewCustomer && (\r\n          <CreateCustomerForm\r\n            actionName=\"create_customer\"\r\n            navigation={navigation}\r\n            formErrors={data?.customerActionErrors}\r\n            onCancel={() => {\r\n              setCustomerSelectValue(\"\");\r\n              if (data) data.customerActionErrors = {};\r\n            }}\r\n          />\r\n        )}\r\n      </Modal>\r\n      <Modal open={isNewProduct}>\r\n        <h3 className=\"mb-4\">Create new product</h3>\r\n        {isNewProduct && (\r\n          <CreateProductForm\r\n            actionName=\"create_product\"\r\n            selectData={{ brands, types, models }}\r\n            navigation={navigation}\r\n            formErrors={data?.productActionErrors}\r\n            onCancel={() => {\r\n              dispatchPSV({\r\n                type: \"update\",\r\n                row_id: newProductRow,\r\n                product_id: \"\",\r\n              });\r\n              if (data) data.productActionErrors = {};\r\n            }}\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n", "import { Form } from \"@remix-run/react\";\r\nimport type { Navigation } from \"@remix-run/router\";\r\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\r\n\r\nconst CreateCustomerForm = ({\r\n  navigation,\r\n  formErrors,\r\n  onCancel,\r\n  actionName,\r\n}: {\r\n  navigation: Navigation;\r\n  formErrors?: any;\r\n  onCancel: Function;\r\n  actionName: string;\r\n}) => {\r\n  return (\r\n    <Form replace method=\"post\" className={formClass}>\r\n      {formErrors && formErrors.info && (\r\n        <label className=\"label\">\r\n          <span className=\"label-text-alt text-error\">{formErrors.info}</span>\r\n        </label>\r\n      )}\r\n      <fieldset disabled={navigation.state === \"submitting\"}>\r\n        <div className=\"mb-2\">\r\n          <label className=\"label\" htmlFor=\"name\">\r\n            <span className=\"label-text\">Name</span>\r\n          </label>\r\n          <input\r\n            className={inputClass}\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"John Smith\"\r\n          />\r\n          {formErrors && formErrors.name && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.name}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <label className=\"label\" htmlFor=\"tel\">\r\n            <span className=\"label-text\">Tel</span>\r\n          </label>\r\n          <input\r\n            className={inputClass}\r\n            id=\"tel\"\r\n            name=\"tel\"\r\n            type=\"text\"\r\n            placeholder=\"07123456789\"\r\n          />\r\n          {formErrors && formErrors.tel && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.tel}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <label className=\"label\" htmlFor=\"email\">\r\n            <span className=\"label-text\">Email</span>\r\n          </label>\r\n          <input\r\n            className={inputClass}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"john@example.com\"\r\n          />\r\n          {formErrors && formErrors.email && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.email}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-2\">\r\n          <label className=\"label\" htmlFor=\"address\">\r\n            <span className=\"label-text\">Address</span>\r\n          </label>\r\n          <textarea\r\n            className=\"textarea textarea-bordered w-full block bg-base-200\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            placeholder=\"123 somewhere st, somehwere, S03 3EW\"\r\n          />\r\n          {formErrors && formErrors.address && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.address}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4 mb-2\">\r\n          <button\r\n            className=\"btn\"\r\n            type=\"submit\"\r\n            name=\"_action\"\r\n            value={actionName}\r\n          >\r\n            {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n          </button>\r\n          <button\r\n            className=\"btn ml-4\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateCustomerForm;\r\n", "import type {\r\n  product_brands,\r\n  product_models,\r\n  product_types,\r\n} from \"@prisma/client\";\r\nimport { Form } from \"@remix-run/react\";\r\nimport type { Navigation } from \"@remix-run/router\";\r\nimport cn from \"classnames\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { formClass, inputClass, selectClass } from \"~/utils/styleClasses\";\r\n\r\nconst TaxonomyField = ({\r\n  taxoName,\r\n  taxoItems,\r\n  inputError,\r\n}: {\r\n  taxoName: string;\r\n  taxoItems: any;\r\n  inputError: any;\r\n}) => {\r\n  const hasItems = taxoItems.length > 0;\r\n  const [isNewTaxoItem, setIsNewTaxoItem] = useState(!hasItems);\r\n  const [taxoSelectValue, setTaxoSelectValue] = useState(\"\");\r\n\r\n  const taxoInputClass = cn({\r\n    [inputClass]: true,\r\n    \"mt-2\": isNewTaxoItem,\r\n    hidden: !isNewTaxoItem,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsNewTaxoItem(taxoSelectValue === \"-1\");\r\n  }, [taxoSelectValue]);\r\n\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label\r\n        className=\"label\"\r\n        htmlFor={isNewTaxoItem ? `new${taxoName}` : taxoName}\r\n      >\r\n        <span className=\"label-text\">Product {taxoName}</span>\r\n      </label>\r\n      {hasItems && (\r\n        <select\r\n          className={selectClass}\r\n          name={taxoName}\r\n          id={taxoName}\r\n          value={taxoSelectValue}\r\n          onChange={(e) => {\r\n            setTaxoSelectValue(e.target.value);\r\n          }}\r\n        >\r\n          <option disabled value=\"\">\r\n            Select a {taxoName}...\r\n          </option>\r\n          {taxoItems.map((taxoItem: any) => {\r\n            return (\r\n              <option\r\n                key={taxoItem[`${taxoName}_id`]}\r\n                value={taxoItem[`${taxoName}_id`]}\r\n              >\r\n                {taxoItem[`${taxoName}_name`]}\r\n              </option>\r\n            );\r\n          })}\r\n          <option value=\"-1\">Add new {taxoName} +</option>\r\n        </select>\r\n      )}\r\n      <input\r\n        disabled={!isNewTaxoItem}\r\n        className={taxoInputClass}\r\n        id={`new${taxoName}`}\r\n        name={`new${taxoName}`}\r\n        type=\"text\"\r\n        placeholder={`Defined new ${taxoName} here...`}\r\n      />\r\n      {inputError && inputError[taxoName] && (\r\n        <label className=\"label\">\r\n          <span className=\"label-text-alt text-error\">\r\n            {inputError[taxoName]}\r\n          </span>\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CreateProductForm = ({\r\n  selectData,\r\n  navigation,\r\n  formErrors,\r\n  onCancel,\r\n  actionName,\r\n}: {\r\n  selectData: {\r\n    brands: product_brands[];\r\n    models: product_models[];\r\n    types: product_types[];\r\n  };\r\n  navigation: Navigation;\r\n  formErrors?: any;\r\n  onCancel: Function;\r\n  actionName: string;\r\n}) => {\r\n  const { brands, models, types } = selectData;\r\n\r\n  return (\r\n    <Form replace method=\"post\" className={formClass}>\r\n      {formErrors && formErrors.info && (\r\n        <label className=\"label\">\r\n          <span className=\"label-text-alt text-error\">{formErrors.info}</span>\r\n        </label>\r\n      )}\r\n\r\n      <fieldset disabled={navigation.state === \"submitting\"}>\r\n        <TaxonomyField\r\n          taxoName=\"brand\"\r\n          taxoItems={brands}\r\n          inputError={formErrors}\r\n        />\r\n        <TaxonomyField\r\n          taxoName=\"type\"\r\n          taxoItems={types}\r\n          inputError={formErrors}\r\n        />\r\n        <TaxonomyField\r\n          taxoName=\"model\"\r\n          taxoItems={models}\r\n          inputError={formErrors}\r\n        />\r\n        <div className=\"mb-2\">\r\n          <label className=\"label\" htmlFor=\"price\">\r\n            <span className=\"label-text\">Product price (\u00A3)</span>\r\n          </label>\r\n          <input\r\n            className={inputClass}\r\n            id=\"price\"\r\n            name=\"price\"\r\n            type=\"number\"\r\n            placeholder=\"10.00\"\r\n          />\r\n          {formErrors && formErrors.price && (\r\n            <label className=\"label\">\r\n              <span className=\"label-text-alt text-error\">\r\n                {formErrors.price}\r\n              </span>\r\n            </label>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-end mt-4 mb-2\">\r\n          <button\r\n            className=\"btn\"\r\n            type=\"submit\"\r\n            name=\"_action\"\r\n            value={actionName}\r\n          >\r\n            {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n          </button>\r\n          <button\r\n            className=\"btn ml-3\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              onCancel();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CreateProductForm;\r\n", "import type { products } from \"@prisma/client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { inputClass, resTDClass, resTRClass, selectClass } from \"~/utils/styleClasses\";\r\n\r\nconst QuoteProductRow = ({\r\n  rowId,\r\n  products,\r\n  productSelectValues,\r\n  dispatchPSV,\r\n}: {\r\n  rowId: string;\r\n  products: products[];\r\n  productSelectValues: {\r\n    row_id: string;\r\n    product_id: string;\r\n    qty: number;\r\n    price: number;\r\n  }[];\r\n  dispatchPSV: any;\r\n}) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [unitPrice, setUnitPrice] = useState(0);\r\n  const [subtotal, setSubtotal] = useState(0);\r\n  const [productSelectValue, setProductSelectValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSubtotal(Number(unitPrice * qty));\r\n  }, [qty, unitPrice]);\r\n\r\n  useEffect(() => {\r\n    const currPSV = productSelectValues.find((p) => p.row_id === rowId);\r\n    if (currPSV) {\r\n      setProductSelectValue(currPSV.product_id);\r\n      setQty(currPSV.qty);\r\n      setUnitPrice(currPSV.price);\r\n    }\r\n  }, [productSelectValues, rowId]);\r\n\r\n  const handleSelect = (row_id: string, product_id: string) => {\r\n    const selectedProd: products | undefined = products.find(\r\n      (product) => parseInt(product_id) === product.product_id\r\n    );\r\n    dispatchPSV({\r\n      type: \"update\",\r\n      row_id,\r\n      product_id,\r\n      qty: 1,\r\n      price: selectedProd ? selectedProd.price : 0,\r\n    });\r\n  };\r\n\r\n  const handleQtyInput = (row_id: string, qty: number) => {\r\n    dispatchPSV({ type: \"update\", row_id, qty });\r\n  };\r\n\r\n  return (\r\n    <tr className={resTRClass}>\r\n      <td\r\n        colSpan={productSelectValue ? 1 : 4}\r\n        data-label=\"Product\"\r\n        className={resTDClass}\r\n      >\r\n        <select\r\n          className={selectClass}\r\n          name={`p_${rowId}_id`}\r\n          id={`p_${rowId}_id`}\r\n          value={productSelectValue}\r\n          onChange={(e) => {\r\n            handleSelect(rowId, e.target.value);\r\n          }}\r\n        >\r\n          <option disabled value=\"\">\r\n            Select a product...\r\n          </option>\r\n          {products.map(({ product_id, brand_name, type_name, model_name }) => {\r\n            return (\r\n              <option key={product_id} value={product_id}>\r\n                {brand_name} - {type_name} - {model_name}\r\n              </option>\r\n            );\r\n          })}\r\n          <option value=\"-1\">Add new product +</option>\r\n        </select>\r\n      </td>\r\n      {productSelectValue && (\r\n        <>\r\n          <td data-label=\"Quantity\" className={resTDClass}>\r\n            <input\r\n              className={inputClass}\r\n              name={`p_${rowId}_qty`}\r\n              id={`p_${rowId}_qty`}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={qty}\r\n              onChange={(e) => {\r\n                handleQtyInput(rowId, parseInt(e.target.value));\r\n              }}\r\n            />\r\n          </td>\r\n          <td data-label=\"Unit (\u00A3)\" className={`${resTDClass} md:text-right`}>\r\n            {unitPrice ? unitPrice : \" - \"}\r\n          </td>\r\n          <td\r\n            data-label=\"Subtotal (\u00A3)\"\r\n            className={`${resTDClass} md:text-right`}\r\n          >\r\n            {subtotal ? subtotal : \" - \"}\r\n          </td>\r\n        </>\r\n      )}\r\n    </tr>\r\n  );\r\n};\r\nexport default QuoteProductRow;\r\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { useContext } from \"react\";\r\nimport { SITE_TITLE, UserContext } from \"~/root\";\r\nimport { db, getUserByEmail } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { validateEmail, validateFname, validateLname, validatePassword } from \"~/utils/validations\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Change user details`}];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  return {};\r\n};\r\n\r\nexport async function action({ request, params }: ActionArgs) {\r\n  const formData = await request.formData();\r\n\r\n  const fname = formData.get(\"firstname\") as string;\r\n  const lname = formData.get(\"lastname\") as string;\r\n  const email = formData.get(\"email\") as string;\r\n  const ropassword = formData.get(\"opassword\") as string;\r\n  const rnpassword = formData.get(\"npassword\") as string;\r\n\r\n  const formErrors: {\r\n    fname: string | undefined;\r\n    lname: string | undefined;\r\n    email: string | undefined;\r\n    opassword: string | undefined;\r\n    npassword: string | undefined;\r\n  } = {\r\n    fname: validateFname(fname),\r\n    lname: validateLname(lname),\r\n    email: validateEmail(email),\r\n    opassword: validatePassword(ropassword),\r\n    npassword: undefined,\r\n  };\r\n\r\n  //if there are errors, we return the form errors\r\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\r\n\r\n  // do I have to get user again? (cant use context here)\r\n  const user = await getUserByEmail(email);\r\n  // validate original password\r\n  if (user) {\r\n    const isCorrectPassword = await bcrypt.compare(\r\n      ropassword,\r\n      `${user.password}`\r\n    );\r\n    if (!isCorrectPassword) formErrors.opassword = \"Invalid password!\";\r\n  } else {\r\n    formErrors.opassword = \"user not found, unable to verify password!\";\r\n  }\r\n\r\n  //if there are errors, we return the form errors\r\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\r\n\r\n  let newpassword\r\n  if (rnpassword && rnpassword.length) {\r\n    formErrors.npassword = validatePassword(rnpassword);\r\n  \r\n    //if there are errors, we return the form errors\r\n    if (Object.values(formErrors).some(Boolean)) return { formErrors };\r\n\r\n    // generate enctypted password\r\n    newpassword = await bcrypt.hash(rnpassword, 10);\r\n  }\r\n\r\n  const { userid } = params\r\n  const id = userid as string\r\n  const updateUser = await db.users.update({\r\n    where: {\r\n      id: parseInt(id)\r\n    },\r\n    data: {\r\n      firstName: fname,\r\n      lastName: lname,\r\n      email: email,\r\n      ...(newpassword && {password: newpassword}),\r\n      updatedAt: new Date(),\r\n    }\r\n  })\r\n  if (updateUser) {\r\n    return redirect(\"/users\");\r\n  } else {\r\n    console.log(\"err:\", \"failed to update the user\");\r\n  }\r\n}\r\n\r\nexport default function UserId() {\r\n  const user: any = useContext(UserContext);\r\n  const navigation = useNavigation();\r\n  const data = useActionData();\r\n\r\n  return(\r\n    <div className=\"grid place-items-center\">\r\n      <div className=\"w-full max-w-xs\">\r\n        <Form method=\"post\" className=\"bg-base-300 px-4 py-2 rounded-lg\">\r\n          <fieldset disabled={navigation.state === \"submitting\"}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"firstname\">\r\n                <span className=\"label-text\">First name</span>\r\n              </label>\r\n              <input\r\n                className=\"input input-bordered w-full max-w-xs\"\r\n                id=\"firstname\"\r\n                name=\"firstname\"\r\n                type=\"text\"\r\n                placeholder={user.firstName}\r\n              />\r\n              {data && data.formErrors && data.formErrors.fname && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.fname}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"lastname\">\r\n                <span className=\"label-text\">Last name</span>\r\n              </label>\r\n              <input\r\n                className=\"input input-bordered w-full max-w-xs\"\r\n                id=\"lastname\"\r\n                name=\"lastname\"\r\n                type=\"text\"\r\n                placeholder={user.lastName}\r\n              />\r\n              {data && data.formErrors && data.formErrors.lname && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.lname}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"email\">\r\n                <span className=\"label-text\">Email</span>\r\n              </label>\r\n              <input type=\"hidden\" name=\"email\" value={user.email} />\r\n              <input\r\n                className=\"input input-bordered w-full max-w-xs\"\r\n                type=\"text\"\r\n                placeholder={user.email}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"opassword\">\r\n                <span className=\"label-text\">Original password</span>\r\n              </label>\r\n              <input\r\n                className=\"input input-bordered w-full max-w-xs\"\r\n                id=\"opassword\"\r\n                name=\"opassword\"\r\n                type=\"password\"\r\n                placeholder=\"******************\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.opassword && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.opassword}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <label className=\"label\" htmlFor=\"npassword\">\r\n                <span className=\"label-text\">New password</span>\r\n              </label>\r\n              <input\r\n                className=\"input input-bordered w-full max-w-xs\"\r\n                id=\"npassword\"\r\n                name=\"npassword\"\r\n                type=\"password\"\r\n                placeholder=\"******************\"\r\n              />\r\n              {data && data.formErrors && data.formErrors.npassword && (\r\n                <p className=\"text-error mt-1 text-xs\">\r\n                  {data.formErrors.npassword}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"mt-6 mb-2\">\r\n              <button className=\"btn\" type=\"submit\">\r\n                {navigation.state === \"submitting\" ? \"Submitting...\" : \"Submit\"}\r\n              </button>\r\n              <a href=\"/users\" className=\"btn ml-3\">\r\n                Cancel\r\n              </a>\r\n            </div>\r\n          </fieldset>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport { Form, useLoaderData, useNavigation } from \"@remix-run/react\";\r\nimport { useContext, useState } from \"react\";\r\nimport Modal from \"~/components/Modal\";\r\nimport { SITE_TITLE, UserContext } from \"~/root\";\r\nimport { db, deleteUserById, getUserById } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Users` }];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  const user = await getUserById(uid);\r\n  if (!user?.isAdmin) return redirect(`/users/${uid}`);\r\n  try {\r\n    let users = {};\r\n    users = await db.users.findMany();\r\n    return json({ users });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const deleteUserId = formData.get(\"uid\") as string;\r\n  const approvedUserId = formData.get(\"approvedUserId\") as string;\r\n  if (deleteUserId) {\r\n    try {\r\n      await deleteUserById(parseInt(deleteUserId));\r\n      return redirect(\"/users\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      return {};\r\n    }\r\n  }\r\n  if (approvedUserId) {\r\n    try {\r\n      await db.users.update({\r\n        where: { id: parseInt(approvedUserId) },\r\n        data: { isApproved: 1 },\r\n      });\r\n      return redirect(\"/users\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nexport default function UsersIndex() {\r\n  const { users } = useLoaderData();\r\n  const navigation = useNavigation();\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  const [deletedUserID, setDeletedUserId] = useState(0);\r\n  const [modelOpen, setModalOpen] = useState(false);\r\n  const user: any = useContext(UserContext);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table static\">\r\n        <thead>\r\n          <tr className=\"hidden md:table-row\">\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Approved</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users &&\r\n            users.map((loopedUser: any) => {\r\n              return (\r\n                <tr className={resTRClass} key={loopedUser.id}>\r\n                  <td data-label=\"ID\" className={resTDClass}>\r\n                    {loopedUser.id}\r\n                  </td>\r\n                  <td data-label=\"First Name\" className={resTDClass}>\r\n                    {loopedUser.firstName}\r\n                  </td>\r\n                  <td data-label=\"Last Name\" className={resTDClass}>\r\n                    {loopedUser.lastName}\r\n                  </td>\r\n                  <td data-label=\"Email\" className={resTDClass}>\r\n                    {loopedUser.email}\r\n                  </td>\r\n                  <td data-label=\"Approved\" className={resTDClass}>\r\n                    {loopedUser.isApproved ? (\r\n                      \"Approved\"\r\n                    ) : (\r\n                      <Form method=\"post\">\r\n                        <input\r\n                          type=\"hidden\"\r\n                          name=\"approvedUserId\"\r\n                          value={loopedUser.id}\r\n                        />\r\n                        <button type=\"submit\" className=\"btn\">\r\n                          Approve\r\n                        </button>\r\n                      </Form>\r\n                    )}\r\n                  </td>\r\n                  <td data-label=\"Actions\" className={resTDClass}>\r\n                    <div className=\"btn-group\">\r\n                      <a\r\n                        href={`users/${loopedUser.id}`}\r\n                        className=\"btn\"\r\n                      >\r\n                        EDIT\r\n                      </a>\r\n                      <button\r\n                        className=\"btn\"\r\n                        disabled={user.id === loopedUser.id}\r\n                        onClick={() => {\r\n                          setDeletedUserId(loopedUser.id);\r\n                          setModalOpen(true);\r\n                        }}\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n      <Modal open={modelOpen}>\r\n        <p className=\"py-4\">Are you sure you want to delete this user?</p>\r\n        <div className=\"modal-action\">\r\n          <Form\r\n            method=\"post\"\r\n            onSubmit={() => {\r\n              setModalOpen(false);\r\n            }}\r\n          >\r\n            <input type=\"hidden\" name=\"uid\" value={deletedUserID} />\r\n            <button\r\n              className=\"btn\"\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              {isSubmitting ? \"Confirming...\" : \"Confirm\"}\r\n            </button>\r\n          </Form>\r\n          <button\r\n            className=\"btn\"\r\n            disabled={isSubmitting}\r\n            onClick={() => setModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n", "import type { customers } from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigation,\r\n} from \"@remix-run/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CreateCustomerForm from \"~/components/CreateCustomerForm\";\r\nimport Modal from \"~/components/Modal\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { createCustomer, db, deleteCustomerById } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { contentBodyClass, resTDClass, resTRClass } from \"~/utils/styleClasses\";\r\nimport { validateCustomerData } from \"~/utils/validations\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Customers` }];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  try {\r\n    const customers: customers[] = await db.customers.findMany();\r\n    return json({ customers });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const { _action, ...values } = Object.fromEntries(formData);\r\n  switch (_action) {\r\n    case \"delete\":\r\n      const { customer_id } = values;\r\n      const deleteActionsErrors: any = {};\r\n      try {\r\n        await deleteCustomerById(parseInt(`${customer_id}`));\r\n        return { customerDeleted: true };\r\n      } catch (err) {\r\n        console.error(err);\r\n        deleteActionsErrors.info = `There was a problem deleting customer with id: ${customer_id}`;\r\n        return { deleteActionsErrors };\r\n      }\r\n    case \"create\":\r\n      const { name, tel, email, address } = values;\r\n      const createActionErrors: any = validateCustomerData(values);\r\n\r\n      if (Object.values(createActionErrors).some(Boolean))\r\n        return { createActionErrors };\r\n\r\n      try {\r\n        await createCustomer(`${name}`, `${tel}`, `${email}`, `${address}`);\r\n        return { customerCreated: true };\r\n      } catch (err) {\r\n        console.log(err);\r\n        createActionErrors.info =\r\n          \"There was a problem creating the customer...\";\r\n        return { createActionErrors };\r\n      }\r\n  }\r\n  return {};\r\n}\r\n\r\nexport default function Customers() {\r\n  const { customers }: { customers: customers[] } = useLoaderData();\r\n  const data = useActionData();\r\n  const navigation = useNavigation();\r\n  const [deletedCustomerID, setDeletedCustomerID] = useState(0);\r\n  const [deleteModelOpen, setDeleteModalOpen] = useState(false);\r\n  const [createModalOpen, setCreateModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (data.customerCreated) setCreateModalOpen(false);\r\n    if (data.customerDeleted) setDeleteModalOpen(false);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={contentBodyClass}>\r\n      {customers && customers.length ? (\r\n        <table className=\"table static\">\r\n          <thead>\r\n            <tr className=\"hidden md:table-row\">\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Tel</th>\r\n              <th>Email</th>\r\n              <th>Address</th>\r\n              <th className=\"md:text-right\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {customers &&\r\n              customers.map(\r\n                ({ customer_id, name, tel, email, address }: customers) => {\r\n                  return (\r\n                    <tr className={resTRClass} key={customer_id}>\r\n                      <td data-label=\"ID\" className={resTDClass}>\r\n                        {customer_id}\r\n                      </td>\r\n                      <td data-label=\"Name\" className={resTDClass}>\r\n                        {name}\r\n                      </td>\r\n                      <td data-label=\"Tel\" className={resTDClass}>\r\n                        {tel}\r\n                      </td>\r\n                      <td data-label=\"Email\" className={resTDClass}>\r\n                        {email}\r\n                      </td>\r\n                      <td data-label=\"Address\" className={resTDClass}>\r\n                        {address}\r\n                      </td>\r\n                      <td\r\n                        data-label=\"Actions\"\r\n                        className={`${resTDClass} md:text-right`}\r\n                      >\r\n                        <button\r\n                          className=\"btn\"\r\n                          onClick={() => {\r\n                            setDeletedCustomerID(customer_id);\r\n                            setDeleteModalOpen(true);\r\n                          }}\r\n                        >\r\n                          DELETE\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                }\r\n              )}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"text-center\">No customers found...</p>\r\n      )}\r\n      <div className=\"flex justify-end mt-4\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            setCreateModalOpen(true);\r\n          }}\r\n        >\r\n          Add new customer +\r\n        </button>\r\n      </div>\r\n      <Modal open={createModalOpen}>\r\n        <h3 className=\"mb-4\">Create new customer</h3>\r\n        {createModalOpen && (\r\n          <CreateCustomerForm\r\n            actionName=\"create\"\r\n            navigation={navigation}\r\n            formErrors={data?.createActionErrors}\r\n            onCancel={() => {\r\n              setCreateModalOpen(false);\r\n              if (data) data.createActionErrors = {};\r\n            }}\r\n          />\r\n        )}\r\n      </Modal>\r\n      <Modal open={deleteModelOpen}>\r\n        <p className=\"py-4\">Are you sure you want to delete this customer?</p>\r\n        {data && data.deleteActionsErrors && (\r\n          <p className=\"text-error mt-1 text-xs\">\r\n            {data.deleteActionsErrors.info}\r\n          </p>\r\n        )}\r\n        <div className=\"modal-action\">\r\n          <Form replace method=\"post\">\r\n            <input type=\"hidden\" name=\"customer_id\" value={deletedCustomerID} />\r\n            <button\r\n              className=\"btn\"\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value=\"delete\"\r\n              disabled={navigation.state === \"submitting\"}\r\n            >\r\n              {navigation.state === \"submitting\" ? \"Confirming...\" : \"Confirm\"}\r\n            </button>\r\n          </Form>\r\n          <button\r\n            className=\"btn\"\r\n            disabled={navigation.state === \"submitting\"}\r\n            onClick={() => setDeleteModalOpen(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n", "import type {\r\n  product_brands,\r\n  product_models,\r\n  product_types,\r\n  products,\r\n} from \"@prisma/client\";\r\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport {\r\n  Form,\r\n  useActionData,\r\n  useLoaderData,\r\n  useNavigation,\r\n} from \"@remix-run/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CreateProductForm from \"~/components/CreateProductForm\";\r\nimport Modal from \"~/components/Modal\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { createProduct, db, deleteProductById } from \"~/utils/db\";\r\nimport { getUserId } from \"~/utils/session\";\r\nimport { contentBodyClass, resTDClass, resTRClass } from \"~/utils/styleClasses\";\r\nimport { validateProductData } from \"~/utils/validations\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Products` }];\r\n};\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const uid = await getUserId(request);\r\n  if (!uid) return redirect(\"/login\");\r\n  try {\r\n    const [brands, types, models, products]: [\r\n      brands: product_brands[],\r\n      types: product_types[],\r\n      models: product_models[],\r\n      products: products[]\r\n    ] = await Promise.all([\r\n      db.product_brands.findMany(),\r\n      db.product_types.findMany(),\r\n      db.product_models.findMany(),\r\n      db.products.findMany({\r\n        include: {\r\n          brand: true,\r\n          type: true,\r\n          model: true,\r\n        },\r\n      }),\r\n    ]);\r\n    return json({ brands, types, models, products });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return {};\r\n  }\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const formData = await request.formData();\r\n  const { _action, ...values } = Object.fromEntries(formData);\r\n  switch (_action) {\r\n    case \"delete\":\r\n      const { product_id } = values;\r\n      const deleteActionsErrors: any = {};\r\n      try {\r\n        await deleteProductById(parseInt(`${product_id}`));\r\n        return { productDeleted: true };\r\n      } catch (err) {\r\n        console.error(err);\r\n        deleteActionsErrors.info = `There was a problem deleting product with id: ${product_id}`;\r\n        return { deleteActionsErrors };\r\n      }\r\n    case \"create\":\r\n      const { brand, newbrand, type, newtype, model, newmodel, price } = values;\r\n      const createActionErrors: any = validateProductData(values);\r\n\r\n      if (Object.values(createActionErrors).some(Boolean))\r\n        return { createActionErrors };\r\n\r\n      try {\r\n        await createProduct(\r\n          `${brand}`,\r\n          `${newbrand}`,\r\n          `${type}`,\r\n          `${newtype}`,\r\n          `${model}`,\r\n          `${newmodel}`,\r\n          `${price}`\r\n        );\r\n        return { productCreated: true };\r\n      } catch (err) {\r\n        console.log(err);\r\n        createActionErrors.info = \"There was a problem creating the product...\";\r\n        return { createActionErrors };\r\n      }\r\n  }\r\n}\r\n\r\nexport default function Products() {\r\n  const {\r\n    products,\r\n    brands,\r\n    types,\r\n    models,\r\n  }: {\r\n    products: products[];\r\n    brands: product_brands[];\r\n    types: product_types[];\r\n    models: product_models[];\r\n  } = useLoaderData();\r\n  const data = useActionData();\r\n  const navigation = useNavigation();\r\n  const [deletedProductID, setDeletedProductID] = useState(0);\r\n  const [deleteModelOpen, setDeleteModalOpen] = useState(false);\r\n  const [createModalOpen, setCreateModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (data.productCreated) setCreateModalOpen(false);\r\n    if (data.productDeleted) setDeleteModalOpen(false);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (data.productCreated) setCreateModalOpen(false);\r\n    if (data.productDeleted) setDeleteModalOpen(false);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={contentBodyClass}>\r\n      {products && products.length ? (\r\n        <table className=\"table static\">\r\n          <thead>\r\n            <tr className=\"hidden md:table-row\">\r\n              <th>ID</th>\r\n              <th>Brand</th>\r\n              <th>Type</th>\r\n              <th>Model</th>\r\n              <th>Price</th>\r\n              <th className=\"md:text-right\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products &&\r\n              products.map((loopedProducts: any) => {\r\n                return (\r\n                  <tr className={resTRClass} key={loopedProducts.product_id}>\r\n                    <td data-label=\"ID\" className={resTDClass}>\r\n                      {loopedProducts.product_id}\r\n                    </td>\r\n                    <td data-label=\"Brand\" className={resTDClass}>\r\n                      {loopedProducts.brand.brand_name}\r\n                    </td>\r\n                    <td data-label=\"Type\" className={resTDClass}>\r\n                      {loopedProducts.type.type_name}\r\n                    </td>\r\n                    <td data-label=\"Model\" className={resTDClass}>\r\n                      {loopedProducts.model.model_name}\r\n                    </td>\r\n                    <td data-label=\"Price\" className={resTDClass}>\r\n                      \u00A3{loopedProducts.price}\r\n                    </td>\r\n                    <td\r\n                      data-label=\"Actions\"\r\n                      className={`${resTDClass} md:text-right`}\r\n                    >\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                          setDeletedProductID(loopedProducts.product_id);\r\n                          setDeleteModalOpen(true);\r\n                        }}\r\n                      >\r\n                        DELETE\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p className=\"text-center\">No products found...</p>\r\n      )}\r\n      <div className=\"flex justify-end mt-4\">\r\n        <button\r\n          className=\"btn\"\r\n          onClick={() => {\r\n            setCreateModalOpen(true);\r\n          }}\r\n        >\r\n          Add new product +\r\n        </button>\r\n      </div>\r\n      <Modal open={createModalOpen}>\r\n        <h3 className=\"mb-4\">Create new product</h3>\r\n        {createModalOpen && (\r\n          <CreateProductForm\r\n            actionName=\"create\"\r\n            selectData={{\r\n              brands,\r\n              types,\r\n              models,\r\n            }}\r\n            navigation={navigation}\r\n            formErrors={data?.createActionErrors}\r\n            onCancel={() => {\r\n              setCreateModalOpen(false);\r\n              if (data) data.createActionErrors = {};\r\n            }}\r\n          />\r\n        )}\r\n      </Modal>\r\n      <Modal open={deleteModelOpen}>\r\n        <p className=\"py-4\">\r\n          Are you sure you want to delete this product?\r\n          <br />\r\n          NOTE: this doesn't delete the associated brand, model and type\r\n        </p>\r\n        <div className=\"modal-action\">\r\n          <Form replace method=\"post\">\r\n            <input type=\"hidden\" name=\"product_id\" value={deletedProductID} />\r\n            <button\r\n              className=\"btn\"\r\n              type=\"submit\"\r\n              name=\"_action\"\r\n              value=\"delete\"\r\n              disabled={navigation.state === \"submitting\"}\r\n            >\r\n              {navigation.state === \"submitting\" ? \"Confirming...\" : \"Confirm\"}\r\n            </button>\r\n          </Form>\r\n          <button\r\n            className=\"btn\"\r\n            disabled={navigation.state === \"submitting\"}\r\n            onClick={() => setDeleteModalOpen(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n", "import {\n  redirect,\n  type LoaderArgs,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { SITE_TITLE } from \"~/root\";\nimport { getUserId } from \"~/utils/session\";\nimport { contentBodyClass } from \"~/utils/styleClasses\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: SITE_TITLE }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  return {};\n};\n\nexport default function IndexRoute() {\n  return (\n    <div className={contentBodyClass}>\n      <p>Welcome to Smart CCTV admin</p>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\r\nimport { logout } from \"~/utils/session\";\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  return logout(request);\r\n};\r\n", "import { Outlet } from \"react-router\";\r\nimport { contentBodyClass } from \"~/utils/styleClasses\";\r\n\r\nexport default function Quotes() {\r\n  return (\r\n    <div className={contentBodyClass}>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { SITE_TITLE } from \"~/root\";\r\nimport { getUserByEmail } from \"~/utils/db\";\r\nimport { createUserSession } from \"~/utils/session\";\r\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [{ title: `${SITE_TITLE} - Login` }];\r\n};\r\n\r\nexport async function action({ request }: ActionArgs) {\r\n  const body = await request.formData();\r\n  const email = body.get(\"email\") as string;\r\n  const password = body.get(\"password\") as string;\r\n  var mess = \"\";\r\n  const user = await getUserByEmail(email);\r\n  if (user && user.isApproved) {\r\n    const isCorrectPassword = await bcrypt.compare(\r\n      password,\r\n      `${user.password}`\r\n    );\r\n    if (!isCorrectPassword) mess = \"Invalid password!\";\r\n    else {\r\n      return await createUserSession(user.id, \"/\");\r\n    }\r\n  } else {\r\n    mess = \"User not found\";\r\n  }\r\n\r\n  return json({ message: mess });\r\n}\r\n\r\nexport default function Login() {\r\n  const navigation = useNavigation();\r\n  const data = useActionData();\r\n\r\n  return (\r\n    <div className=\"grid place-items-center\">\r\n      <div className=\"w-full max-w-xs\">\r\n        <Form method=\"post\" className={formClass}>\r\n          <fieldset disabled={navigation.state === \"submitting\"}>\r\n            <div className=\"mb-4\">\r\n              <label className=\"label\" htmlFor=\"email\">\r\n                <span className=\"label-text\">Email</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                name=\"email\"\r\n                id=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"john@example.com\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"label\" htmlFor=\"password\">\r\n                <span className=\"label-text\">Password</span>\r\n              </label>\r\n              <input\r\n                className={inputClass}\r\n                name=\"password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"******************\"\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-between items-center mt-6 mb-2\">\r\n              <button className=\"btn\" type=\"submit\">\r\n                {navigation.state === \"submitting\" ? \"Validating...\" : \"Log In\"}\r\n              </button>\r\n              <a\r\n                href=\"/users/register\"\r\n                className=\"block link link-neutral-content\"\r\n              >\r\n                Register\r\n              </a>\r\n              {data && data.message && (\r\n                <label className=\"label\">\r\n                  <span className=\"label-text-alt text-error\">\r\n                    {data.message}\r\n                  </span>\r\n                </label>\r\n              )}\r\n            </div>\r\n          </fieldset>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Outlet } from \"react-router\";\r\nimport { contentBodyClass } from \"~/utils/styleClasses\";\r\n\r\nexport default function Users() {\r\n  return (\r\n    <div className={contentBodyClass}>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n", "export default {'entry':{'module':'/build/entry.client-LIOE7YNK.js','imports':['/build/_shared/chunk-OAPPX4FA.js','/build/_shared/chunk-WEAPBHQG.js','/build/_shared/chunk-FKB2SGI5.js','/build/_shared/chunk-2QJY4JOV.js','/build/_shared/chunk-BQ232ZJA.js','/build/_shared/chunk-TH3LK4B7.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-CJ4MY3PQ.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-JWSC4BOP.js','imports':['/build/_shared/chunk-4T5TODQK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-LAQSHNYD.js','imports':['/build/_shared/chunk-DHB5MWPQ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/customers':{'id':'routes/customers','parentId':'root','path':'customers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/customers-UHXS3YHB.js','imports':['/build/_shared/chunk-5OX43IU4.js','/build/_shared/chunk-7CP4UGUO.js','/build/_shared/chunk-DHB5MWPQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-W2DWVQMW.js','imports':['/build/_shared/chunk-DHB5MWPQ.js','/build/_shared/chunk-MT6OIOVU.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-5GTPI7EF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products':{'id':'routes/products','parentId':'root','path':'products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products-7MTKKLDO.js','imports':['/build/_shared/chunk-6VLRY35K.js','/build/_shared/chunk-7CP4UGUO.js','/build/_shared/chunk-DHB5MWPQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes':{'id':'routes/quotes','parentId':'root','path':'quotes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes-KXY3PMWY.js','imports':['/build/_shared/chunk-DHB5MWPQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.$quoteid':{'id':'routes/quotes.$quoteid','parentId':'routes/quotes','path':':quoteid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.$quoteid-7QZ3EHLD.js','imports':['/build/_shared/chunk-7CP4UGUO.js','/build/_shared/chunk-4T5TODQK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.$quoteid.generatedquote':{'id':'routes/quotes.$quoteid.generatedquote','parentId':'routes/quotes.$quoteid','path':'generatedquote','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.$quoteid.generatedquote-PGCXKCXU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes._index':{'id':'routes/quotes._index','parentId':'routes/quotes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/quotes._index-LJUTQTRZ.js','imports':['/build/_shared/chunk-4T5TODQK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.create':{'id':'routes/quotes.create','parentId':'routes/quotes','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.create-J5IRHJHO.js','imports':['/build/_shared/chunk-5OX43IU4.js','/build/_shared/chunk-6VLRY35K.js','/build/_shared/chunk-7CP4UGUO.js','/build/_shared/chunk-4T5TODQK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users':{'id':'routes/users','parentId':'root','path':'users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users-736TVVIG.js','imports':['/build/_shared/chunk-DHB5MWPQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users.$userid':{'id':'routes/users.$userid','parentId':'routes/users','path':':userid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users.$userid-RFD5MWT6.js','imports':['/build/_shared/chunk-MT6OIOVU.js','/build/_shared/chunk-4T5TODQK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users._index':{'id':'routes/users._index','parentId':'routes/users','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/users._index-JNLZK4Q5.js','imports':['/build/_shared/chunk-7CP4UGUO.js','/build/_shared/chunk-4T5TODQK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users.register':{'id':'routes/users.register','parentId':'routes/users','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users.register-SKE2VLVP.js','imports':['/build/_shared/chunk-MT6OIOVU.js','/build/_shared/chunk-4T5TODQK.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'b3c50d49','hmr':{'runtime':'/build/_shared/chunk-TH3LK4B7.js','timestamp':1690123598581},'url':'/build/manifest-B3C50D49.js'};", "\nimport * as entryServer from \"/mnt/c/dev/smartcctv-invoicing/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/quotes.$quoteid.generatedquote.tsx\";\nimport * as route2 from \"./routes/quotes.$quoteid.tsx\";\nimport * as route3 from \"./routes/users.register.tsx\";\nimport * as route4 from \"./routes/quotes._index.tsx\";\nimport * as route5 from \"./routes/quotes.create.tsx\";\nimport * as route6 from \"./routes/users.$userid.tsx\";\nimport * as route7 from \"./routes/users._index.tsx\";\nimport * as route8 from \"./routes/customers.tsx\";\nimport * as route9 from \"./routes/products.tsx\";\nimport * as route10 from \"./routes/_index.tsx\";\nimport * as route11 from \"./routes/logout.tsx\";\nimport * as route12 from \"./routes/quotes.tsx\";\nimport * as route13 from \"./routes/login.tsx\";\nimport * as route14 from \"./routes/users.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/quotes.$quoteid.generatedquote\": {\n      id: \"routes/quotes.$quoteid.generatedquote\",\n      parentId: \"routes/quotes.$quoteid\",\n      path: \"generatedquote\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/quotes.$quoteid\": {\n      id: \"routes/quotes.$quoteid\",\n      parentId: \"routes/quotes\",\n      path: \":quoteid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/users.register\": {\n      id: \"routes/users.register\",\n      parentId: \"routes/users\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/quotes._index\": {\n      id: \"routes/quotes._index\",\n      parentId: \"routes/quotes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/quotes.create\": {\n      id: \"routes/quotes.create\",\n      parentId: \"routes/quotes\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/users.$userid\": {\n      id: \"routes/users.$userid\",\n      parentId: \"routes/users\",\n      path: \":userid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/users._index\": {\n      id: \"routes/users._index\",\n      parentId: \"routes/users\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/customers\": {\n      id: \"routes/customers\",\n      parentId: \"root\",\n      path: \"customers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/products\": {\n      id: \"routes/products\",\n      parentId: \"root\",\n      path: \"products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/quotes\": {\n      id: \"routes/quotes\",\n      parentId: \"root\",\n      path: \"quotes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/users\": {\n      id: \"routes/users\",\n      parentId: \"root\",\n      path: \"users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };"],
  "mappings": "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",
  "names": ["nodemailer", "isbot", "import_node", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_jsx_dev_runtime", "name", "loader", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "cn", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "action", "bcrypt", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "prettifyDateString", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_classnames", "import_jsx_dev_runtime", "cn", "import_react", "import_jsx_dev_runtime", "qty", "import_jsx_dev_runtime", "meta", "loader", "action", "price", "action", "loader", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "meta", "loader", "action", "bcrypt", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "loader", "meta", "import_node", "import_jsx_dev_runtime", "meta", "loader", "loader", "loader", "import_jsx_dev_runtime", "action", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "meta", "action", "bcrypt", "import_react_router", "import_jsx_dev_runtime"]
}
