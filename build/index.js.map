{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/session.tsx", "../app/utils/db.tsx", "../app/components/NavBar.tsx", "../app/routes/quotes.$quoteid.generatedquote.tsx", "../app/components/QuotePDFDoc.tsx", "../app/routes/quotes.$quoteid.tsx", "../app/components/FormAnchorBtn.tsx", "../app/components/FormBtn.tsx", "../app/components/Modal.tsx", "../app/components/ShareQuoteForm.tsx", "../app/utils/styleClasses.ts", "../app/utils/mailer.ts", "../app/utils/validations.tsx", "../app/routes/users.register.tsx", "../app/routes/quotes._index.tsx", "../app/routes/quotes.create.tsx", "../app/components/CreateCustomerForm.tsx", "../app/components/CreateProductForm.tsx", "../app/components/QuoteProductRow.tsx", "../app/routes/users.$userid.tsx", "../app/routes/users._index.tsx", "../app/routes/customers.tsx", "../app/routes/products.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/quotes.tsx", "../app/routes/login.tsx", "../app/routes/users.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport nodemailer from 'nodemailer';\nexport const mailer = nodemailer;\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import stylesheet from \"~/tailwind.css\";\nimport { json, type LinksFunction, type LoaderArgs } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport { createContext } from \"react\";\nimport { getUserId } from \"./utils/session\";\nimport { getUserById } from \"./utils/db\";\nimport NavBar from \"./components/NavBar\";\n\nexport const SITE_TITLE = \"Smart CCTV admin\";\n\nexport const UserContext = createContext(null);\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = (await getUserId(request) as number);\n  if (!uid) return {};\n  try {\n    const user = await getUserById(uid);\n    return json({ user });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport default function App() {\n  const { user } = useLoaderData();\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <UserContext.Provider value={user}>\n          <NavBar />\n          <Outlet />\n        </UserContext.Provider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import {\n    createCookieSessionStorage,\n    redirect,\n} from \"@remix-run/node\";\n\nconst sessionSecret = 'sessionYsecret';\nif (!sessionSecret) {\n    throw new Error(\"SESSION_SECRET must be set\");\n}\nconst storage = createCookieSessionStorage({\n    cookie: {\n        name: \"user_session\",\n        // normally you want this to be `secure: true`\n        // but that doesn't work on localhost for Safari\n        // https://web.dev/when-to-use-local-https/\n        secure: process.env.NODE_ENV === \"production\",\n        secrets: [sessionSecret],\n        sameSite: \"lax\",\n        path: \"/\",\n        maxAge: 60 * 60 * 24 * 30,\n        httpOnly: true,\n    },\n});\nexport async function createUserSession(\n    userId: number,\n    redirectTo: string\n) {\n    const session = await storage.getSession();\n    session.set(\"userId\", userId);\n\n    return redirect(redirectTo, {\n        headers: {\n            \"Set-Cookie\": await storage.commitSession(session),\n        },\n    });\n}\nfunction getUserSession(request: Request) {\n    return storage.getSession(request.headers.get(\"Cookie\"));\n}\nexport async function getUserId(request: Request) {\n    const session = await getUserSession(request);\n    const userId = session.get(\"userId\");\n    if (!userId || typeof userId !== \"number\") return null;\n    return userId;\n  }\nexport async function logout(request: Request) {\n    const session = await getUserSession(request);\n    return redirect(\"/login\", {\n      headers: {\n        \"Set-Cookie\": await storage.destroySession(session),\n      },\n    });\n  }", "import type { Prisma } from \"@prisma/client\";\nimport { PrismaClient } from \"@prisma/client\";\n\ndeclare const global: Global & { db?: PrismaClient };\n\nlet db: PrismaClient;\n\nif (typeof window === \"undefined\") {\n  if (process.env[\"NODE_ENV\"] === \"production\") {\n    db = new PrismaClient();\n  } else {\n    if (!global.db) {\n      global.db = new PrismaClient();\n    }\n    db = global.db;\n  }\n}\n\nconst getUserByEmail = (email: string) => {\n  return db.users.findFirst({\n    where: { email },\n  });\n};\n\nconst getUserById = (id: number) => {\n  return db.users.findFirst({\n    where: { id },\n  });\n};\n\nconst deleteUserById = (id: number) => {\n  return db.users.delete({\n    where: { id },\n  });\n};\n\nconst deleteProductById = (product_id: number) => {\n  return db.products.delete({\n    where: { product_id },\n  });\n};\n\nconst deleteCustomerById = (customer_id: number) => {\n  return db.customers.delete({\n    where: { customer_id },\n  });\n};\n\nconst createCustomer = (\n  name: string,\n  tel: string,\n  email: string,\n  address: string\n) => {\n  return db.customers.create({\n    data: {\n      name,\n      tel,\n      email,\n      address,\n    },\n  });\n};\n\nconst createProduct = (\n  brand: string,\n  newbrand: string,\n  type: string,\n  newtype: string,\n  model: string,\n  newmodel: string,\n  price: string\n) => {\n  const isBrandSelected = brand && parseInt(brand) > 0;\n  const isTypeSelected = type && parseInt(type) > 0;\n  const isModelSelected = model && parseInt(model) > 0;\n\n  const newProduct: Prisma.productsCreateInput = {\n    brand: isBrandSelected\n      ? { connect: { brand_id: parseInt(brand) } }\n      : { create: { brand_name: newbrand } },\n    type: isTypeSelected\n      ? { connect: { type_id: parseInt(type) } }\n      : { create: { type_name: newtype } },\n    model: isModelSelected\n      ? { connect: { model_id: parseInt(model) } }\n      : { create: { model_name: newmodel } },\n    price: Number(price),\n  };\n\n  return db.products.create({ data: newProduct });\n};\n\nexport {\n  db,\n  getUserByEmail,\n  getUserById,\n  deleteUserById,\n  deleteProductById,\n  deleteCustomerById,\n  createCustomer,\n  createProduct\n};\n", "import { useContext } from \"react\";\nimport { UserContext } from \"~/root\";\n\nconst NavBar = () => {\n  const user: any = useContext(UserContext);\n  if (!user) return <div className=\"navbar bg-base-100\"></div>;\n  return (\n    <div className=\"navbar bg-base-100\">\n      <div className=\"navbar-start\">\n        <div className=\"dropdown\">\n          <label tabIndex={0} className=\"btn btn-ghost btn-circle\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6h16M4 12h16M4 18h7\"\n              />\n            </svg>\n          </label>\n          <ul\n            tabIndex={0}\n            className=\"prose prose-li:pl-0 prose-a:no-underline menu dropdown-content mt-2 p-2 shadow bg-base-300 rounded-box z-[1]\"\n          >\n            <li>\n              <a href=\"/\">Home</a>\n            </li>\n            <li>\n              {user.isAdmin ? (\n                <a href=\"/users\">Users</a>\n              ) : (\n                <a href={`/users/${user.id}`}>My details</a>\n              )}\n            </li>\n            <li>\n              <a href=\"/quotes\">Quotes</a>\n            </li>\n            <li>\n              <a href=\"/customers\">Customers</a>\n            </li>\n            <li>\n              <a href=\"/products\">Products</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"navbar-center\">\n        <img\n          className=\"h-10 w-auto mx-4\"\n          src=\"https://smartcctvuk.co.uk/img/logo-small.png\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"navbar-end\">\n        {!user ? (\n          <button\n            className=\"btn btn-ghost btn-circle tooltip tooltip-left\"\n            data-tip=\"login\"\n          >\n            <a href=\"/login\">\n              <svg\n                className=\"w-6 h-6 mx-auto\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"\n                ></path>\n              </svg>\n            </a>\n          </button>\n        ) : (\n          <>\n            <p className=\"hidden md:block\">Hi, {user.firstName}</p>\n            <button\n              className=\"btn btn-ghost btn-circle tooltip tooltip-left\"\n              data-tip=\"logout\"\n            >\n              <a href=\"/logout\">\n                <svg\n                  className=\"w-6 h-6 mx-auto\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                  ></path>\n                </svg>\n              </a>\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n", "// routes/pdf.tsx\nimport { redirect } from \"@remix-run/node\";\n// this is your PDF document component created with React PDF\nimport { getQuoteBuffer } from \"~/components/QuotePDFDoc\";\nimport { getUserId } from \"~/utils/session\";\n\nexport const loader = async ({ request, params }: any) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  const { quoteid } = params;\n\n  // and transform it to a Buffer to send in the Response\n  let body: any = await getQuoteBuffer(quoteid);\n\n  // finally create the Response with the correct Content-Type header for\n  // a PDF\n  let headers = new Headers({ \"Content-Type\": \"application/pdf\" });\n  return new Response(body, { status: 200, headers });\n};\n", "import type { customers, quoted_products } from \"@prisma/client\";\nimport {\n  Document,\n  Image,\n  Page,\n  StyleSheet,\n  Text,\n  View,\n  renderToStream,\n} from \"@react-pdf/renderer\";\nimport { db } from \"~/utils/db\";\n\ntype QuotesType = {\n  quote_id: number;\n  createdAt: string;\n  updatedAt: string;\n  customer: customers;\n  labour: number;\n  quoted_products: quoted_products[];\n};\n\nexport const getQuoteBuffer = async (quoteid: string | undefined) => {\n  if (!quoteid) return Promise.reject({ error: \"quote id is not defined\" });\n  const id = quoteid as string;\n  let quote: any;\n  try {\n    quote = await db.quotes.findUnique({\n      where: {\n        quote_id: parseInt(id),\n      },\n      include: {\n        customer: true,\n        quoted_products: true,\n      },\n    });\n  } catch (error) {\n    Promise.reject({ error });\n  }\n\n  let stream = await renderToStream(<QuotePDFDoc quote={quote} />);\n  // and transform it to a Buffer to send in the Response\n  return new Promise((resolve, reject) => {\n    let buffers: Uint8Array[] = [];\n    stream.on(\"data\", (data) => {\n      buffers.push(data);\n    });\n    stream.on(\"end\", () => {\n      resolve(Buffer.concat(buffers));\n    });\n    stream.on(\"error\", reject);\n  });\n};\n\nconst styles = StyleSheet.create({\n  page: {\n    fontSize: 12,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottomColor: \"#000000\",\n    borderBottomWidth: 1,\n  },\n  logo: {\n    width: 200,\n  },\n  customerRow: {\n    flexDirection: \"row\",\n    marginBottom: 12,\n  },\n  customerField: {\n    width: 200,\n  },\n  customerValue: {},\n  table: {\n    marginTop: 5,\n    borderWidth: 1,\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderTopWidth: 1,\n  },\n  tableCell: {\n    padding: \"5 10\",\n    width: \"15%\",\n    textAlign: \"right\",\n    borderLeftWidth: 1,\n  },\n  endRow: {\n    flexDirection: \"row\",\n  },\n  endField: {\n    padding: \"5 10\",\n    width: \"85%\",\n    textAlign: \"right\",\n  },\n  endValue: {\n    padding: \"5 10\",\n    width: \"15%\",\n    textAlign: \"right\",\n    borderLeftWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n  },\n});\n\nconst QuotePDFDoc = ({ quote }: { quote: QuotesType }) => {\n  const { quote_id, createdAt, customer, labour, quoted_products } = quote;\n  const { name, tel, email, address } = customer;\n  const date = new Date(createdAt);\n\n  let grandTotal = 0;\n  quoted_products.forEach(\n    ({ price, quantity }) => (grandTotal += price * quantity)\n  );\n  grandTotal += labour;\n\n  return (\n    <Document title={`Smart CCTV quote #${quote_id}, for ${name}`}>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.header}>\n          <Image\n            src=\"https://smartcctvuk.co.uk/img/logo-small.png\"\n            style={styles.logo}\n          />\n          <Text style={{ marginRight: 20 }}>{date.toDateString()}</Text>\n        </View>\n        <View style={{ margin: \"15 20\" }}>\n          <View style={styles.customerRow}>\n            <Text style={styles.customerField}>Name:</Text>\n            <Text style={styles.customerValue}>{name}</Text>\n          </View>\n          <View style={styles.customerRow}>\n            <Text style={styles.customerField}>Address:</Text>\n            <Text style={styles.customerValue}>{address}</Text>\n          </View>\n          <View style={styles.customerRow}>\n            <Text style={styles.customerField}>Tel:</Text>\n            <Text style={styles.customerValue}>{tel}</Text>\n          </View>\n          <View style={styles.customerRow}>\n            <Text style={styles.customerField}>Email:</Text>\n            <Text style={styles.customerValue}>{email}</Text>\n          </View>\n          <View style={styles.table}>\n            <View style={[styles.tableRow, { borderTop: 0 }]}>\n              <View\n                style={[\n                  styles.tableCell,\n                  { textAlign: \"left\", width: \"55%\", borderLeftWidth: 0 },\n                ]}\n              >\n                <Text>Product</Text>\n              </View>\n              <View style={styles.tableCell}>\n                <Text>Quantity</Text>\n              </View>\n              <View style={styles.tableCell}>\n                <Text>Unit price</Text>\n              </View>\n              <View style={styles.tableCell}>\n                <Text>Total price</Text>\n              </View>\n            </View>\n            {quoted_products &&\n              quoted_products.map(\n                ({ invprod_id, name, quantity, price }: quoted_products) => (\n                  <View key={invprod_id} style={styles.tableRow}>\n                    <View\n                      style={[\n                        styles.tableCell,\n                        { textAlign: \"left\", width: \"55%\", borderLeftWidth: 0 },\n                      ]}\n                    >\n                      <Text>{name}</Text>\n                    </View>\n                    <View style={styles.tableCell}>\n                      <Text>\u00A3{quantity}.00</Text>\n                    </View>\n                    <View style={styles.tableCell}>\n                      <Text>\u00A3{price}.00</Text>\n                    </View>\n                    <View style={styles.tableCell}>\n                      <Text>\u00A3{price * quantity}.00</Text>\n                    </View>\n                  </View>\n                )\n              )}\n          </View>\n          <View style={styles.endRow}>\n            <Text style={styles.endField}>Labour:</Text>\n            <Text style={styles.endValue}>\u00A3{labour}.00</Text>\n          </View>\n          <View style={styles.endRow}>\n            <Text style={styles.endField}>Grand total:</Text>\n            <Text style={styles.endValue}>\u00A3{grandTotal}.00</Text>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default QuotePDFDoc;\n", "import type { customers, quoted_products } from \"@prisma/client\";\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useActionData, useLoaderData, useNavigation } from \"@remix-run/react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport Modal from \"~/components/Modal\";\nimport { getQuoteBuffer } from \"~/components/QuotePDFDoc\";\nimport ShareQuoteForm from \"~/components/ShareQuoteForm\";\nimport { mailer } from \"~/entry.server\";\nimport { SITE_TITLE, UserContext } from \"~/root\";\nimport { db } from \"~/utils/db\";\nimport { sendEmail } from \"~/utils/mailer\";\nimport { getUserId } from \"~/utils/session\";\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\nimport { validateEmail } from \"~/utils/validations\";\n\ntype QuotesType = {\n  quote_id: number;\n  createdAt: string;\n  updatedAt: string;\n  customer: customers;\n  labour: number;\n  quoted_products: quoted_products[];\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - View quote ` }];\n};\n\nexport const loader = async ({ request, params }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  const { quoteid } = params;\n  const id = quoteid as string;\n  try {\n    const quote = await db.quotes.findUnique({\n      where: {\n        quote_id: parseInt(id),\n      },\n      include: {\n        customer: true,\n        quoted_products: true,\n      },\n    });\n    return json({ quote });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const { _action, ...values } = Object.fromEntries(formData);\n  switch (_action) {\n    case \"share_quote\":\n      const { quoteid, customerEmail, userEmail, otherEmails } = values;\n      const shareActionErrors: any = {};\n\n      if (!customerEmail && !userEmail && !otherEmails)\n        shareActionErrors.msg = \"One option has to be selected or defined!\";\n\n      if (Object.values(shareActionErrors).some(Boolean))\n        return { shareActionErrors };\n\n      const othEmails = otherEmails\n        ? String(otherEmails)\n            .split(\",\")\n            .map((othEmail: string) => {\n              const trimmed = othEmail.trim();\n              shareActionErrors.msg = validateEmail(trimmed);\n              return trimmed;\n            })\n        : [];\n\n      if (Object.values(shareActionErrors).some(Boolean))\n        return { shareActionErrors };\n\n      const allEmails: string[] = [...othEmails];\n\n      if (customerEmail) allEmails.push(String(customerEmail));\n      if (userEmail) allEmails.push(String(userEmail));\n\n      const pdfBuffer = await getQuoteBuffer(quoteid as string);\n\n      const mailResponse: any = await sendEmail(allEmails, pdfBuffer);\n      if (mailResponse.error)\n        return { shareActionErrors: { msg: mailResponse.error } };\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\"message sent:\", mailer.getTestMessageUrl(mailResponse));\n      }\n\n      if (mailResponse.accepted && mailResponse.accepted.length > 0)\n        return { shareActionErrors: { msg: \"mail sent!\" } };\n      return {\n        shareActionErrors: {\n          msg: \"something went wrong (vague, I know, but I haven't handled this error)\",\n        },\n      };\n  }\n  return {};\n}\n\nconst prettifyDateString = (dateString: string) => {\n  const date = new Date(dateString);\n  return date.toDateString();\n};\n\nexport default function QuoteId() {\n  const user: any = useContext(UserContext);\n  const { quote }: { quote: QuotesType } = useLoaderData();\n  const { createdAt, labour, customer, quoted_products } = quote;\n  const navigation = useNavigation();\n  const data = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [grandTotal, setGrandTotal] = useState(0);\n  const [showShareModal, setShowShareModal] = useState(false);\n\n  useEffect(() => {\n    setGrandTotal(() => {\n      let subTotals = 0;\n      quoted_products.forEach(\n        ({ price, quantity }) => (subTotals += price * quantity)\n      );\n      return subTotals + labour;\n    });\n  }, [labour, quoted_products]);\n\n  return (\n    <div>\n      <h2>Quote</h2>\n      <p>Created on: {prettifyDateString(createdAt)}</p>\n      <h3>Customer</h3>\n      <p>Name: {customer.name}</p>\n      <p>Address: {customer.address}</p>\n      <p>Tel: {customer.tel}</p>\n      <p>Email: {customer.email}</p>\n      <h3>Products</h3>\n      <table className=\"table\">\n        <thead>\n          <tr className=\"hidden md:table-row\">\n            <th>Name</th>\n            <th>Quantity</th>\n            <th className=\"text-right\">Unit Price (\u00A3)</th>\n            <th className=\"text-right\">Subtotal (\u00A3)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {quoted_products &&\n            quoted_products.map(\n              ({ invprod_id, name, quantity, price }: quoted_products) => {\n                return (\n                  <tr key={invprod_id} className={resTRClass}>\n                    <td data-label=\"Name\" className={resTDClass}>\n                      {name}\n                    </td>\n                    <td data-label=\"Quantity\" className={resTDClass}>\n                      {quantity}\n                    </td>\n                    <td\n                      data-label=\"Unit Price (\u00A3)\"\n                      className={`${resTDClass} md:text-right`}\n                    >\n                      {price}\n                    </td>\n                    <td\n                      data-label=\"Subtotal (\u00A3)\"\n                      className={`${resTDClass} md:text-right`}\n                    >\n                      {price * quantity}\n                    </td>\n                  </tr>\n                );\n              }\n            )}\n          <tr className={resTRClass}>\n            <td colSpan={3} className=\"hidden md:table-cell\"></td>\n            <td className=\"md:text-right\">Labour cost (\u00A3): {labour}</td>\n          </tr>\n          <tr className={resTRClass}>\n            <td colSpan={3} className=\"hidden md:table-cell\"></td>\n            <td className=\"md:text-right\">Total cost (\u00A3): {grandTotal}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"flex justify-end mt-4 gap-4\">\n        <FormAnchorButton\n          href={`/quotes/${quote.quote_id}/generatedquote`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          isSubmitting={isSubmitting}\n        >\n          Generate\n        </FormAnchorButton>\n        <FormBtn\n          isSubmitting={isSubmitting}\n          onClick={() => {\n            setShowShareModal(true);\n          }}\n        >\n          Share\n        </FormBtn>\n        <FormAnchorButton href=\"/quotes\" isSubmitting={isSubmitting}>\n          Back\n        </FormAnchorButton>\n      </div>\n      <Modal open={showShareModal}>\n        <h3 className=\"mb-4\">Share with:</h3>\n        {showShareModal && (\n          <ShareQuoteForm\n            quoteid={quote.quote_id}\n            customer={customer}\n            user={user}\n            navigation={navigation}\n            formErrors={data?.shareActionErrors}\n            onCancel={() => {\n              setShowShareModal(false);\n              if (data) data.shareActionErrors = {};\n            }}\n          />\n        )}\n      </Modal>\n    </div>\n  );\n}\n", "import type { AnchorHTMLAttributes } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\ninterface FormAnchorButton<T> extends AnchorHTMLAttributes<T> {\r\n  isSubmitting?: boolean;\r\n}\r\n\r\nconst FormAnchorButton = ({ isSubmitting, className, ...props }: FormAnchorButton<HTMLAnchorElement>) => {\r\n  const btnClass = cn({\r\n    \"btn\": true,\r\n    \"btn-disabled\": isSubmitting,\r\n    ...(className && {[`${className}`] : true})\r\n  });\r\n  return (\r\n    <a className={btnClass} {...props} />\r\n  );\r\n};\r\n\r\nexport default FormAnchorButton;\r\n", "import type { ButtonHTMLAttributes } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\ninterface FormBtn<T> extends ButtonHTMLAttributes<T> {\r\n  isSubmitting?: boolean;\r\n}\r\n\r\nconst FormBtn = ({ isSubmitting, className, disabled, ...props }: FormBtn<HTMLButtonElement>) => {\r\n  const btnClass = cn({\r\n    \"btn\": true,\r\n    \"loading\": isSubmitting && props.type === \"submit\",\r\n    ...(className && {[`${className}`] : true})\r\n  });\r\n  return (\r\n    <button className={btnClass} disabled={disabled || isSubmitting} {...props} />\r\n  );\r\n};\r\n\r\nexport default FormBtn;\r\n", "import React from \"react\";\nimport cn from \"classnames\";\ntype Props = {\n  children: React.ReactNode;\n  open: boolean;\n};\n\nconst Modal = ({ children, open }: Props) => {\n  const modalClass = cn({\n    \"modal modal-bottom sm:modal-middle\": true,\n    \"modal-open\": open,\n    hidden: !open,\n  });\n  return (\n    <div className={modalClass}>\n      <div className=\"modal-box prose\">{children}</div>\n    </div>\n  );\n};\n\nexport default Modal;\n", "import { Form } from \"@remix-run/react\";\nimport type { customers, users } from \"@prisma/client\";\nimport type { Navigation } from \"@remix-run/router\";\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\nimport FormBtn from \"./FormBtn\";\n\nconst ShareQuoteForm = ({\n  quoteid,\n  navigation,\n  customer,\n  user,\n  onCancel,\n  formErrors,\n}: {\n  quoteid: number;\n  navigation: Navigation;\n  customer: customers;\n  user: users;\n  onCancel: Function;\n  formErrors: any;\n}) => {\n  const isSubmitting = navigation.state === \"submitting\";\n  return (\n    <Form replace method=\"post\" className={formClass}>\n      <input type=\"hidden\" value={quoteid} name=\"quoteid\" id=\"quoteid\" />\n      <fieldset disabled={isSubmitting}>\n        <div className=\"form-control\">\n          <label className=\"label cursor-pointer\">\n            <span className=\"label-text\">\n              {customer.name} ({customer.email})\n            </span>\n            <input\n              type=\"checkbox\"\n              className=\"checkbox\"\n              name=\"customerEmail\"\n              id=\"customerEmail\"\n              value={customer.email}\n            />\n          </label>\n        </div>\n        <div className=\"form-control\">\n          <label className=\"label cursor-pointer\">\n            <span className=\"label-text\">\n              {user.firstName} ({user.email})\n            </span>\n            <input\n              type=\"checkbox\"\n              className=\"checkbox\"\n              name=\"userEmail\"\n              id=\"userEmail\"\n              value={user.email}\n            />\n          </label>\n        </div>\n        <div className=\"form-control\">\n          <label className=\"label\">\n            <span className=\"label-text\">Other(s)</span>\n          </label>\n          <input\n            type=\"text\"\n            name=\"otherEmails\"\n            id=\"otherEmails\"\n            placeholder=\"john@example.com,jill@example.com,etc\"\n            className={inputClass}\n          />\n          {formErrors?.msg && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.msg}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"flex justify-end mt-4 mb-2\">\n          <FormBtn\n            type=\"submit\"\n            name=\"_action\"\n            value=\"share_quote\"\n            isSubmitting={isSubmitting}\n          >\n            Submit\n          </FormBtn>\n          <FormBtn\n            className=\"ml-4\"\n            isSubmitting={isSubmitting}\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            Cancel\n          </FormBtn>\n        </div>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default ShareQuoteForm;\n", "export const contentBodyClass = \"prose md:max-w-screen-xl md:mx-auto p-6\";\nexport const formClass = \"bg-base-300 px-4 py-2 rounded-lg\";\nexport const inputClass = \"input input-bordered w-full\";\nexport const selectClass = \"select select-bordered w-full\";\nexport const resTRClass = \"flex flex-col md:table-row\";\nexport const resTDClass =\n  \"before:content-[attr(data-label)] before:block before:mb-1 md:before:hidden\";\n", "import { mailer } from \"~/entry.server\";\n\nexport async function sendEmail(to: string[], attachmentBuffer:any) {\n  let transporter = mailer.createTransport({\n    host: process.env.EMAIL_HOST,\n    port: parseInt(process.env.EMAIL_PORT || \"587\"),\n    secure: false, // upgrade later with STARTTLS\n    auth: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASS,\n    },\n  });\n  return transporter.sendMail({\n    from: process.env.EMAIL_USER,\n    to,\n    subject: \"Smart CCTV Quote\",\n    html: \"Hi. Please find your quotation attached\",\n    attachments: [{\n      filename: \"quote.pdf\",\n      content: attachmentBuffer\n    }]\n  })\n}\n", "export const validateTel = (tel: string) => {\n  if (!tel) {\n    return \"Tel is Required!\";\n  } else if (!/^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/.test(tel)) {\n    return \"Invalid tel, needs to be a 11 digit number!\";\n  }\n};\n\nexport const validateName = (name: string) => {\n  if (!name) {\n    return \"Name is Required!\";\n  } else if (!/^[a-z A-Z]+$/.test(name)) {\n    return \"Invalid name!\";\n  }\n};\n\nexport const validateFname = (firstname: string) => {\n  if (!firstname) {\n    return \"First name is Required!\";\n  } else if (!/^[a-zA-Z]+$/.test(firstname)) {\n    return \"Invalid First name!\";\n  }\n};\n\nexport const validateLname = (lastname: string) => {\n  if (!lastname) {\n    return \"Last name is Required!\";\n  } else if (!/^[a-zA-Z]+$/.test(lastname)) {\n    return \"Invalid Last name!\";\n  }\n};\n\nexport const validateEmail = (email: string) => {\n  if (!email) {\n    return \"Email is Required!\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n    return \"Invalid emaill!\";\n  }\n};\n\nexport const validatePassword = (password: string) => {\n  if (!password) {\n    return \"Password is Required!\";\n  } else if (\n    !/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(\n      password\n    )\n  ) {\n    return \"Weak password! A strong password should contain atleast 8 characters, 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character.\";\n  }\n};\n\nexport const validateCustomerData = ({ name, tel, email, address }: any) => {\n  const errors: any = {};\n  errors.name = validateName(`${name}`);\n  errors.tel = validateTel(`${tel}`);\n  errors.email = validateEmail(`${email}`);\n  if (!address) errors.address = \"address is required!\";\n  return errors;\n};\n\nexport const validateProductData = ({\n  brand,\n  newbrand,\n  type,\n  newtype,\n  model,\n  newmodel,\n  price,\n}: any) => {\n  const errors: any = {};\n  const isBrandSelected = brand && parseInt(`${brand}`) > 0;\n  const isTypeSelected = type && parseInt(`${type}`) > 0;\n  const isModelSelected = model && parseInt(`${model}`) > 0;\n  if (!isBrandSelected && !newbrand) {\n    errors.brand = \"a brand must be selected or defined\";\n  }\n  if (!isTypeSelected && !newtype) {\n    errors.type = \"a type must be selected or defined\";\n  }\n  if (!isModelSelected && !newmodel) {\n    errors.model = \"a model must be selected or defined\";\n  }\n  if (!price || parseInt(price) <= 0) {\n    errors.price = \"a valid price must be defined\";\n  }\n  return errors;\n};\n", "import type { ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport bcrypt from \"bcryptjs\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport { SITE_TITLE } from \"~/root\";\nimport { db } from \"~/utils/db\";\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\nimport {\n  validateEmail,\n  validateFname,\n  validateLname,\n  validatePassword,\n} from \"~/utils/validations\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Register` }];\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n\n  const fname = formData.get(\"firstname\") as string;\n  const lname = formData.get(\"lastname\") as string;\n  const email = formData.get(\"email\") as string;\n  const rpassword = formData.get(\"password\") as string;\n\n  const formErrors = {\n    fname: validateFname(fname),\n    lname: validateLname(lname),\n    email: validateEmail(email),\n    password: validatePassword(rpassword),\n  };\n  //if there are errors, we return the form errors\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\n\n  // generate enctypted password\n  const password = await bcrypt.hash(rpassword, 10);\n\n  const currUsers = await db.users.findMany();\n  const isFirst = currUsers.length === 0;\n\n  try {\n    await db.users.create({\n      data: {\n        firstName: fname,\n        lastName: lname,\n        email: email,\n        password: password,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        isAdmin: isFirst ? 1 : 0,\n        isApproved: isFirst ? 1 : 0,\n      },\n    });\n    return redirect(\"/login\");\n  } catch (err: any) {\n    if (err.code === \"P2002\") {\n      formErrors.email = \"email already registered!\";\n      return { formErrors };\n    }\n    console.error(err);\n  }\n}\n\n// Note the \"action\" export name, this will handle our form POST\n\nexport default function Register() {\n  const navigation = useNavigation();\n  const data = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  return (\n    <div className=\"grid place-items-center\">\n      <div className=\"w-full max-w-xs\">\n        <Form method=\"post\" className={formClass}>\n          <fieldset disabled={isSubmitting}>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"firstname\">\n                <span className=\"label-text\">First name</span>\n              </label>\n              <input\n                className={inputClass}\n                id=\"firstname\"\n                name=\"firstname\"\n                type=\"text\"\n                placeholder=\"First name\"\n              />\n              {data && data.formErrors && data.formErrors.fname && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.fname}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"lastname\">\n                <span className=\"label-text\">Last name</span>\n              </label>\n              <input\n                className={inputClass}\n                id=\"lastname\"\n                name=\"lastname\"\n                type=\"text\"\n                placeholder=\"Last name\"\n              />\n              {data && data.formErrors && data.formErrors.lname && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.lname}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"email\">\n                <span className=\"label-text\">Email</span>\n              </label>\n              <input\n                className={inputClass}\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Email\"\n              />\n              {data && data.formErrors && data.formErrors.email && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.email}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"label\" htmlFor=\"password\">\n                <span className=\"label-text\">Password</span>\n              </label>\n              <input\n                className={inputClass}\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"******************\"\n              />\n              {data && data.formErrors && data.formErrors.password && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.password}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-6 mb-2\">\n              <FormBtn type=\"submit\" isSubmitting={isSubmitting}>\n                Submit\n              </FormBtn>\n              <FormAnchorButton\n                href=\"/login\"\n                className=\"ml-3\"\n                isSubmitting={isSubmitting}\n              >\n                Cancel\n              </FormAnchorButton>\n            </div>\n          </fieldset>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { customers, quoted_products } from \"@prisma/client\";\nimport type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport { SITE_TITLE } from \"~/root\";\nimport { db } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\n\ntype QuotesType = {\n  quote_id: number;\n  createdAt: string;\n  updatedAt: string;\n  customer: customers;\n  labour: number;\n  quoted_products: quoted_products[];\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Quotes` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  try {\n    const quotes = await db.quotes.findMany({\n      include: {\n        customer: true,\n        quoted_products: true,\n      },\n    });\n    return json({ quotes });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nconst prettifyDateString = (dateString: string) => {\n  const date = new Date(dateString);\n  return date.toDateString();\n};\n\nexport default function QuotesIndex() {\n  const { quotes } = useLoaderData();\n\n  return (\n    <>\n      {quotes && quotes.length ? (\n        <table className=\"table static\">\n          <thead>\n            <tr className=\"hidden md:table-row\">\n              <th>ID</th>\n              <th>Date</th>\n              <th>Customer</th>\n              <th>Amount (\u00A3)</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {quotes &&\n              quotes.map(\n                ({\n                  quote_id,\n                  createdAt,\n                  customer,\n                  quoted_products,\n                  labour,\n                }: QuotesType) => {\n                  return (\n                    <tr className={resTRClass} key={quote_id}>\n                      <td data-label=\"ID\" className={resTDClass}>\n                        {quote_id}\n                      </td>\n                      <td data-label=\"Date\" className={resTDClass}>\n                        {prettifyDateString(createdAt)}\n                      </td>\n                      <td data-label=\"Customer\" className={resTDClass}>\n                        {customer.name}\n                      </td>\n                      <td data-label=\"Amount (\u00A3)\" className={resTDClass}>\n                        {quoted_products.reduce(\n                          (partialSum, qp) =>\n                            partialSum + qp.price * qp.quantity,\n                          0\n                        ) + labour}\n                      </td>\n                      <td data-label=\"Actions\" className={resTDClass}>\n                        <div className=\"btn-group\">\n                          <FormAnchorButton href={`quotes/${quote_id}`}>\n                            View\n                          </FormAnchorButton>\n                          <FormBtn>Delete</FormBtn>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      ) : (\n        <p>No quotes found...</p>\n      )}\n      <div className=\"flex justify-end mt-4\">\n        <FormAnchorButton href=\"/quotes/create\">\n          Add new quote +\n        </FormAnchorButton>\n      </div>\n    </>\n  );\n}\n", "import type {\n  Prisma,\n  customers,\n  product_brands,\n  product_models,\n  product_types,\n  products,\n} from \"@prisma/client\";\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport CreateCustomerForm from \"~/components/CreateCustomerForm\";\nimport CreateProductForm from \"~/components/CreateProductForm\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport Modal from \"~/components/Modal\";\nimport QuoteProductRow from \"~/components/QuoteProductRow\";\nimport { SITE_TITLE } from \"~/root\";\nimport { createCustomer, createProduct, db } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport {\n  formClass,\n  inputClass,\n  resTRClass,\n  selectClass,\n} from \"~/utils/styleClasses\";\nimport { validateCustomerData, validateProductData } from \"~/utils/validations\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Create quote` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  try {\n    const [brands, types, models, customers, products]: [\n      brands: product_brands[],\n      types: product_types[],\n      models: product_models[],\n      customers: customers[],\n      products: products[]\n    ] = await Promise.all([\n      db.product_brands.findMany(),\n      db.product_types.findMany(),\n      db.product_models.findMany(),\n      db.customers.findMany(),\n      db.products.findMany(),\n    ]);\n    return json({ brands, types, models, customers, products });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const { _action, ...values } = Object.fromEntries(formData);\n  switch (_action) {\n    case \"create_customer\":\n      const { name, tel, email, address } = values;\n      const customerActionErrors: any = validateCustomerData(values);\n\n      if (Object.values(customerActionErrors).some(Boolean))\n        return { customerActionErrors };\n\n      try {\n        const createdCustomer = await createCustomer(\n          `${name}`,\n          `${tel}`,\n          `${email}`,\n          `${address}`\n        );\n        return { createdCustomer };\n      } catch (error) {\n        console.log({ error });\n        customerActionErrors.info =\n          \"There was a problem creating the customer...\";\n        return { customerActionErrors };\n      }\n    case \"create_product\":\n      const { brand, newbrand, type, newtype, model, newmodel, price } = values;\n      const productActionErrors: any = validateProductData(values);\n\n      if (Object.values(productActionErrors).some(Boolean))\n        return { productActionErrors };\n      try {\n        const createdProduct = await createProduct(\n          `${brand}`,\n          `${newbrand}`,\n          `${type}`,\n          `${newtype}`,\n          `${model}`,\n          `${newmodel}`,\n          `${price}`\n        );\n        return { createdProduct };\n      } catch (error) {\n        console.log({ error });\n        productActionErrors.info =\n          \"There was a problem creating the product...\";\n        return { productActionErrors };\n      }\n    case \"create_quote\":\n      const { customer, labour, prodcount, ...productValues } = values;\n      const quoteActionErrors: any = {};\n\n      if (!customer)\n        quoteActionErrors.customer = \"you must select or define a customer!\";\n\n      if (Object.keys(productValues).length === 0)\n        quoteActionErrors.product =\n          \"you must select or define at least one product!\";\n\n      if (Object.values(quoteActionErrors).some(Boolean))\n        return { quoteActionErrors };\n\n      // first loop: compile promises to get prods by Id\n      const prodPromiseCollection: any[] = [];\n      [...Array(parseInt(`${prodcount}`))].forEach((e, i) => {\n        const product_id = parseInt(productValues[`p_${i + 1}_id`] as string);\n        if (!product_id) return true;\n        prodPromiseCollection.push(\n          db.products.findUnique({\n            where: { product_id },\n            include: {\n              brand: true,\n              model: true,\n              type: true,\n            },\n          })\n        );\n      });\n\n      // retrieves products from compiled promises\n      let retrievedSelectedProds = [];\n      try {\n        retrievedSelectedProds = await Promise.all(prodPromiseCollection);\n      } catch (error) {\n        console.log({ error });\n        quoteActionErrors.info =\n          \"there was a problem saving the quote, please try again later\";\n        return { quoteActionErrors };\n      }\n\n      // loops products and constructs quoted products\n      const quotedProducts = retrievedSelectedProds.map((product: any, i) => {\n        const { brand_name, model_name, type_name, price } = product;\n        const quantity = parseInt(productValues[`p_${i + 1}_qty`] as string);\n        return {\n          name: `${brand_name} - ${type_name} - ${model_name}`,\n          quantity,\n          price,\n        };\n      });\n\n      const newQuote: Prisma.quotesCreateInput = {\n        customer: {\n          connect: {\n            customer_id: parseInt(`${customer}`),\n          },\n        },\n        quoted_products: {\n          createMany: {\n            data: quotedProducts,\n          },\n        },\n        labour: Number(`${labour}`),\n      };\n\n      try {\n        await db.quotes.create({ data: newQuote });\n        return redirect(\"/quotes\");\n      } catch (error) {\n        console.log({ error });\n        quoteActionErrors.info =\n          \"there was a problem saving the quote, please try again later\";\n        return { quoteActionErrors };\n      }\n  }\n\n  return {};\n}\n\nexport default function QuotesCreate() {\n  const navigation = useNavigation();\n  const {\n    customers,\n    products,\n    brands,\n    types,\n    models,\n  }: {\n    customers: customers[];\n    products: products[];\n    brands: product_brands[];\n    types: product_types[];\n    models: product_models[];\n  } = useLoaderData();\n  const data = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [isNewCustomer, setIsNewCustomer] = useState(false);\n  const [customerSelectValue, setCustomerSelectValue] = useState(\"\");\n  const [productCount, setProductCount] = useState(1);\n  const [labour, setLabour] = useState(0);\n  const [grandtotal, setGrandtotal] = useState(0);\n  const [newProductRow, setNewProductRow] = useState(0);\n  const [isNewProduct, setIsNewProduct] = useState(false);\n  const [productSelectValues, dispatchPSV] = useReducer(\n    (state: any[], action: any) => {\n      const { type, ...values } = action;\n      switch (type) {\n        case \"update\":\n          if (values.product_id === \"-1\") {\n            setNewProductRow(values.row_id);\n            setIsNewProduct(true);\n          } else {\n            setNewProductRow(0);\n            setIsNewProduct(false);\n          }\n          return state.map((psv) => {\n            if (psv.row_id === values.row_id) {\n              return { ...psv, ...values };\n            }\n            return { ...psv };\n          });\n        case \"add\":\n          const doesExist = Boolean(\n            state.find((psv) => psv.row_id === values.row_id)\n          );\n          if (!doesExist) return [...state, { ...values }];\n          return state;\n        case \"remove\":\n          return state.filter((psv) => psv.row_id !== values.row_id);\n        default:\n          return state;\n      }\n    },\n    [{ row_id: \"1\", product_id: \"\", qty: 1, price: 0 }]\n  );\n\n  useEffect(() => {\n    setGrandtotal(\n      productSelectValues.reduce(\n        (partialSum, a: any) => partialSum + a.price * a.qty,\n        0\n      ) + labour\n    );\n  }, [productSelectValues, labour]);\n\n  useEffect(() => {\n    setIsNewCustomer(customerSelectValue === \"-1\");\n  }, [customerSelectValue]);\n\n  useEffect(() => {\n    if (!data) return;\n    if (data.createdCustomer)\n      setCustomerSelectValue(`${data.createdCustomer.customer_id}`);\n    if (data.createdProduct) {\n      dispatchPSV({\n        type: \"update\",\n        row_id: newProductRow,\n        product_id: `${data.createdProduct.product_id}`,\n      });\n    }\n  }, [data, newProductRow]);\n\n  return (\n    <div>\n      <h2 className=\"mb-4 text-center\">Create a new quote</h2>\n      <Form method=\"post\" className={formClass}>\n        {data?.quoteActionErrors?.info && (\n          <label className=\"label\">\n            <span className=\"label-text-alt text-error\">\n              {data.quoteActionErrors.info}\n            </span>\n          </label>\n        )}\n        <input\n          type=\"hidden\"\n          name=\"prodcount\"\n          id=\"prodcount\"\n          value={productCount}\n        />\n        <fieldset disabled={isSubmitting}>\n          <div className=\"mb-4\">\n            <label className=\"label\" htmlFor=\"customer\">\n              <span className=\"label-text\">Customer</span>\n            </label>\n            <select\n              className={selectClass}\n              name=\"customer\"\n              id=\"customer\"\n              value={customerSelectValue}\n              onChange={(e) => {\n                setCustomerSelectValue(e.target.value);\n              }}\n            >\n              <option disabled value=\"\">\n                Select a customer...\n              </option>\n              {customers.map(\n                ({ customer_id, name, tel, email, address }: customers) => {\n                  return (\n                    <option key={customer_id} value={customer_id}>\n                      {name} - {tel} - {email} - {address}\n                    </option>\n                  );\n                }\n              )}\n              <option value=\"-1\">Add new customer +</option>\n            </select>\n            {data?.quoteActionErrors?.customer && (\n              <label className=\"label\">\n                <span className=\"label-text-alt text-error\">\n                  {data.quoteActionErrors.customer}\n                </span>\n              </label>\n            )}\n          </div>\n        </fieldset>\n        <fieldset disabled={isSubmitting}>\n          <label className=\"label\">\n            <span className=\"label-text\">Products</span>\n          </label>\n          {data?.quoteActionErrors?.product && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {data.quoteActionErrors.product}\n              </span>\n            </label>\n          )}\n          <table className=\"table\">\n            <thead>\n              <tr className=\"hidden md:table-row\">\n                <th>Product</th>\n                <th className=\"w-[100px]\">Quantity</th>\n                <th className=\"text-right w-[150px]\">Unit (\u00A3)</th>\n                <th className=\"text-right w-[150px]\">Subtotal (\u00A3)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[...Array(productCount)].map((e, i) => (\n                <QuoteProductRow\n                  key={i}\n                  rowId={`${i + 1}`}\n                  products={products}\n                  productSelectValues={productSelectValues}\n                  dispatchPSV={dispatchPSV}\n                />\n              ))}\n              <tr className={resTRClass}>\n                <td colSpan={4}>\n                  <div className=\"flex md:justify-end btn-group\">\n                    <FormBtn\n                      disabled={productCount === 1}\n                      isSubmitting={isSubmitting}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setProductCount((pCount) => {\n                          dispatchPSV({\n                            type: \"remove\",\n                            row_id: `${pCount}`,\n                          });\n                          return pCount - 1;\n                        });\n                      }}\n                    >\n                      -\n                    </FormBtn>\n                    <FormBtn\n                      isSubmitting={isSubmitting}\n                      onClick={(e) => {\n                        e.preventDefault();\n                        setProductCount((pCount) => {\n                          dispatchPSV({\n                            type: \"add\",\n                            row_id: `${pCount + 1}`,\n                            product_id: \"\",\n                            qty: 1,\n                            price: 0,\n                          });\n                          return pCount + 1;\n                        });\n                      }}\n                    >\n                      +\n                    </FormBtn>\n                  </div>\n                </td>\n              </tr>\n              <tr className={resTRClass}>\n                <td colSpan={2} className=\"hidden md:table-cell\"></td>\n                <td className=\"flex md:table-cell\">\n                  <label className=\"label md:justify-end\" htmlFor=\"labour\">\n                    <span className=\"label-text\">Labour cost (\u00A3):</span>\n                  </label>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    name=\"labour\"\n                    id=\"labour\"\n                    value={labour}\n                    className={`${inputClass} md:text-right`}\n                    onChange={(e) => {\n                      setLabour(parseInt(e.target.value));\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr className={resTRClass}>\n                <td colSpan={2} className=\"hidden md:table-cell\"></td>\n                <td>\n                  <label className=\"label md:justify-end\">\n                    <span className=\"label-text\">Total cost (\u00A3):</span>\n                  </label>\n                </td>\n                <td>\n                  <label className=\"label md:justify-end\">\n                    <span className=\"label-text\">{grandtotal}</span>\n                  </label>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div className=\"flex md:justify-end mt-4 mb-2\">\n            <FormBtn\n              type=\"submit\"\n              name=\"_action\"\n              value=\"create_quote\"\n              isSubmitting={isSubmitting}\n            >\n              Submit\n            </FormBtn>\n            <FormAnchorButton\n              className=\"ml-4\"\n              href=\"/quotes\"\n              isSubmitting={isSubmitting}\n            >\n              Cancel\n            </FormAnchorButton>\n          </div>\n        </fieldset>\n      </Form>\n      <Modal open={isNewCustomer}>\n        <h3 className=\"mb-4\">Create new customer</h3>\n        {isNewCustomer && (\n          <CreateCustomerForm\n            actionName=\"create_customer\"\n            navigation={navigation}\n            formErrors={data?.customerActionErrors}\n            onCancel={() => {\n              setCustomerSelectValue(\"\");\n              if (data) data.customerActionErrors = {};\n            }}\n          />\n        )}\n      </Modal>\n      <Modal open={isNewProduct}>\n        <h3 className=\"mb-4\">Create new product</h3>\n        {isNewProduct && (\n          <CreateProductForm\n            actionName=\"create_product\"\n            selectData={{ brands, types, models }}\n            navigation={navigation}\n            formErrors={data?.productActionErrors}\n            onCancel={() => {\n              dispatchPSV({\n                type: \"update\",\n                row_id: newProductRow,\n                product_id: \"\",\n              });\n              if (data) data.productActionErrors = {};\n            }}\n          />\n        )}\n      </Modal>\n    </div>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\nimport type { Navigation } from \"@remix-run/router\";\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\nimport FormBtn from \"./FormBtn\";\n\nconst CreateCustomerForm = ({\n  navigation,\n  formErrors,\n  onCancel,\n  actionName,\n}: {\n  navigation: Navigation;\n  formErrors?: any;\n  onCancel: Function;\n  actionName: string;\n}) => {\n  const isSubmitting = navigation.state === \"submitting\";\n  return (\n    <Form replace method=\"post\" className={formClass}>\n      {formErrors && formErrors.info && (\n        <label className=\"label\">\n          <span className=\"label-text-alt text-error\">{formErrors.info}</span>\n        </label>\n      )}\n      <fieldset disabled={isSubmitting}>\n        <div className=\"mb-2\">\n          <label className=\"label\" htmlFor=\"name\">\n            <span className=\"label-text\">Name</span>\n          </label>\n          <input\n            className={inputClass}\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"John Smith\"\n          />\n          {formErrors && formErrors.name && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.name}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"mb-2\">\n          <label className=\"label\" htmlFor=\"tel\">\n            <span className=\"label-text\">Tel</span>\n          </label>\n          <input\n            className={inputClass}\n            id=\"tel\"\n            name=\"tel\"\n            type=\"text\"\n            placeholder=\"07123456789\"\n          />\n          {formErrors && formErrors.tel && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.tel}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"mb-2\">\n          <label className=\"label\" htmlFor=\"email\">\n            <span className=\"label-text\">Email</span>\n          </label>\n          <input\n            className={inputClass}\n            id=\"email\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"john@example.com\"\n          />\n          {formErrors && formErrors.email && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.email}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"mb-2\">\n          <label className=\"label\" htmlFor=\"address\">\n            <span className=\"label-text\">Address</span>\n          </label>\n          <textarea\n            className=\"textarea textarea-bordered w-full block bg-base-200\"\n            id=\"address\"\n            name=\"address\"\n            placeholder=\"123 somewhere st, somehwere, S03 3EW\"\n          />\n          {formErrors && formErrors.address && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.address}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"flex justify-end mt-4 mb-2\">\n          <FormBtn\n            type=\"submit\"\n            name=\"_action\"\n            value={actionName}\n            isSubmitting={isSubmitting}\n          >\n            Submit\n          </FormBtn>\n          <FormBtn\n            className=\"ml-4\"\n            isSubmitting={isSubmitting}\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            Cancel\n          </FormBtn>\n        </div>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default CreateCustomerForm;\n", "import type {\n  product_brands,\n  product_models,\n  product_types,\n} from \"@prisma/client\";\nimport { Form } from \"@remix-run/react\";\nimport type { Navigation } from \"@remix-run/router\";\nimport cn from \"classnames\";\nimport { useEffect, useState } from \"react\";\nimport { formClass, inputClass, selectClass } from \"~/utils/styleClasses\";\nimport FormBtn from \"./FormBtn\";\n\nconst TaxonomyField = ({\n  taxoName,\n  taxoItems,\n  inputError,\n}: {\n  taxoName: string;\n  taxoItems: any;\n  inputError: any;\n}) => {\n  const hasItems = taxoItems?.length > 0;\n  const [isNewTaxoItem, setIsNewTaxoItem] = useState(!hasItems);\n  const [taxoSelectValue, setTaxoSelectValue] = useState(\"\");\n\n  const taxoInputClass = cn({\n    [inputClass]: true,\n    \"mt-2\": isNewTaxoItem,\n    hidden: !isNewTaxoItem,\n  });\n\n  useEffect(() => {\n    setIsNewTaxoItem(taxoSelectValue === \"-1\");\n  }, [taxoSelectValue]);\n\n  return (\n    <div className=\"mb-2\">\n      <label\n        className=\"label\"\n        htmlFor={isNewTaxoItem ? `new${taxoName}` : taxoName}\n      >\n        <span className=\"label-text\">Product {taxoName}</span>\n      </label>\n      <select\n        className={selectClass}\n        name={taxoName}\n        id={taxoName}\n        value={taxoSelectValue}\n        onChange={(e) => {\n          setTaxoSelectValue(e.target.value);\n        }}\n      >\n        <option disabled value=\"\">\n          Select a {taxoName}...\n        </option>\n        {hasItems &&\n          taxoItems.map((taxoItem: any) => {\n            return (\n              <option\n                key={taxoItem[`${taxoName}_id`]}\n                value={taxoItem[`${taxoName}_id`]}\n              >\n                {taxoItem[`${taxoName}_name`]}\n              </option>\n            );\n          })}\n        <option value=\"-1\">Add new {taxoName} +</option>\n      </select>\n      <input\n        disabled={!isNewTaxoItem}\n        className={taxoInputClass}\n        id={`new${taxoName}`}\n        name={`new${taxoName}`}\n        type=\"text\"\n        placeholder={`Defined new ${taxoName} here...`}\n      />\n      {inputError && inputError[taxoName] && (\n        <label className=\"label\">\n          <span className=\"label-text-alt text-error\">\n            {inputError[taxoName]}\n          </span>\n        </label>\n      )}\n    </div>\n  );\n};\n\nconst CreateProductForm = ({\n  selectData,\n  navigation,\n  formErrors,\n  onCancel,\n  actionName,\n}: {\n  selectData: {\n    brands: product_brands[];\n    models: product_models[];\n    types: product_types[];\n  };\n  navigation: Navigation;\n  formErrors?: any;\n  onCancel: Function;\n  actionName: string;\n}) => {\n  const { brands, models, types } = selectData;\n  const isSubmitting = navigation.state === \"submitting\";\n  return (\n    <Form replace method=\"post\" className={formClass}>\n      {formErrors && formErrors.info && (\n        <label className=\"label\">\n          <span className=\"label-text-alt text-error\">{formErrors.info}</span>\n        </label>\n      )}\n\n      <fieldset disabled={isSubmitting}>\n        <TaxonomyField\n          taxoName=\"brand\"\n          taxoItems={brands}\n          inputError={formErrors}\n        />\n        <TaxonomyField\n          taxoName=\"type\"\n          taxoItems={types}\n          inputError={formErrors}\n        />\n        <TaxonomyField\n          taxoName=\"model\"\n          taxoItems={models}\n          inputError={formErrors}\n        />\n        <div className=\"mb-2\">\n          <label className=\"label\" htmlFor=\"price\">\n            <span className=\"label-text\">Product price (\u00A3)</span>\n          </label>\n          <input\n            className={inputClass}\n            id=\"price\"\n            name=\"price\"\n            type=\"number\"\n            placeholder=\"10.00\"\n          />\n          {formErrors && formErrors.price && (\n            <label className=\"label\">\n              <span className=\"label-text-alt text-error\">\n                {formErrors.price}\n              </span>\n            </label>\n          )}\n        </div>\n        <div className=\"flex justify-end mt-4 mb-2\">\n          <FormBtn\n            type=\"submit\"\n            name=\"_action\"\n            value={actionName}\n            isSubmitting={isSubmitting}\n          >\n            Submit\n          </FormBtn>\n          <FormBtn\n            className=\"ml-4\"\n            isSubmitting={isSubmitting}\n            onClick={(e) => {\n              e.preventDefault();\n              onCancel();\n            }}\n          >\n            Cancel\n          </FormBtn>\n        </div>\n      </fieldset>\n    </Form>\n  );\n};\n\nexport default CreateProductForm;\n", "import type { products } from \"@prisma/client\";\nimport { useEffect, useState } from \"react\";\nimport { inputClass, resTDClass, resTRClass, selectClass } from \"~/utils/styleClasses\";\n\nconst QuoteProductRow = ({\n  rowId,\n  products,\n  productSelectValues,\n  dispatchPSV,\n}: {\n  rowId: string;\n  products: products[];\n  productSelectValues: {\n    row_id: string;\n    product_id: string;\n    qty: number;\n    price: number;\n  }[];\n  dispatchPSV: any;\n}) => {\n  const [qty, setQty] = useState(1);\n  const [unitPrice, setUnitPrice] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n  const [productSelectValue, setProductSelectValue] = useState(\"\");\n\n  useEffect(() => {\n    setSubtotal(Number(unitPrice * qty));\n  }, [qty, unitPrice]);\n\n  useEffect(() => {\n    const currPSV = productSelectValues.find((p) => p.row_id === rowId);\n    if (currPSV) {\n      setProductSelectValue(currPSV.product_id);\n      setQty(currPSV.qty);\n      setUnitPrice(currPSV.price);\n    }\n  }, [productSelectValues, rowId]);\n\n  const handleSelect = (row_id: string, product_id: string) => {\n    const selectedProd: products | undefined = products.find(\n      (product) => parseInt(product_id) === product.product_id\n    );\n    dispatchPSV({\n      type: \"update\",\n      row_id,\n      product_id,\n      qty: 1,\n      price: selectedProd ? selectedProd.price : 0,\n    });\n  };\n\n  const handleQtyInput = (row_id: string, qty: number) => {\n    dispatchPSV({ type: \"update\", row_id, qty });\n  };\n\n  return (\n    <tr className={resTRClass}>\n      <td\n        colSpan={productSelectValue ? 1 : 4}\n        data-label=\"Product\"\n        className={resTDClass}\n      >\n        <select\n          className={selectClass}\n          name={`p_${rowId}_id`}\n          id={`p_${rowId}_id`}\n          value={productSelectValue}\n          onChange={(e) => {\n            handleSelect(rowId, e.target.value);\n          }}\n        >\n          <option disabled value=\"\">\n            Select a product...\n          </option>\n          {products.map(({ product_id, brand_name, type_name, model_name }) => {\n            return (\n              <option key={product_id} value={product_id}>\n                {brand_name} - {type_name} - {model_name}\n              </option>\n            );\n          })}\n          <option value=\"-1\">Add new product +</option>\n        </select>\n      </td>\n      {productSelectValue && (\n        <>\n          <td data-label=\"Quantity\" className={resTDClass}>\n            <input\n              className={inputClass}\n              name={`p_${rowId}_qty`}\n              id={`p_${rowId}_qty`}\n              type=\"number\"\n              min=\"1\"\n              value={qty}\n              onChange={(e) => {\n                handleQtyInput(rowId, parseInt(e.target.value));\n              }}\n            />\n          </td>\n          <td data-label=\"Unit (\u00A3)\" className={`${resTDClass} md:text-right`}>\n            {unitPrice ? unitPrice : \" - \"}\n          </td>\n          <td\n            data-label=\"Subtotal (\u00A3)\"\n            className={`${resTDClass} md:text-right`}\n          >\n            {subtotal ? subtotal : \" - \"}\n          </td>\n        </>\n      )}\n    </tr>\n  );\n};\nexport default QuoteProductRow;\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport bcrypt from \"bcryptjs\";\nimport { useContext } from \"react\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport { SITE_TITLE, UserContext } from \"~/root\";\nimport { db, getUserByEmail } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport {\n  validateEmail,\n  validateFname,\n  validateLname,\n  validatePassword,\n} from \"~/utils/validations\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Change user details` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  return {};\n};\n\nexport async function action({ request, params }: ActionArgs) {\n  const formData = await request.formData();\n\n  const fname = formData.get(\"firstname\") as string;\n  const lname = formData.get(\"lastname\") as string;\n  const email = formData.get(\"email\") as string;\n  const ropassword = formData.get(\"opassword\") as string;\n  const rnpassword = formData.get(\"npassword\") as string;\n\n  const formErrors: {\n    fname: string | undefined;\n    lname: string | undefined;\n    email: string | undefined;\n    opassword: string | undefined;\n    npassword: string | undefined;\n  } = {\n    fname: validateFname(fname),\n    lname: validateLname(lname),\n    email: validateEmail(email),\n    opassword: validatePassword(ropassword),\n    npassword: undefined,\n  };\n\n  //if there are errors, we return the form errors\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\n\n  // do I have to get user again? (cant use context here)\n  const user = await getUserByEmail(email);\n  // validate original password\n  if (user) {\n    const isCorrectPassword = await bcrypt.compare(\n      ropassword,\n      `${user.password}`\n    );\n    if (!isCorrectPassword) formErrors.opassword = \"Invalid password!\";\n  } else {\n    formErrors.opassword = \"user not found, unable to verify password!\";\n  }\n\n  //if there are errors, we return the form errors\n  if (Object.values(formErrors).some(Boolean)) return { formErrors };\n\n  let newpassword;\n  if (rnpassword && rnpassword.length) {\n    formErrors.npassword = validatePassword(rnpassword);\n\n    //if there are errors, we return the form errors\n    if (Object.values(formErrors).some(Boolean)) return { formErrors };\n\n    // generate enctypted password\n    newpassword = await bcrypt.hash(rnpassword, 10);\n  }\n\n  const { userid } = params;\n  const id = userid as string;\n  const updateUser = await db.users.update({\n    where: {\n      id: parseInt(id),\n    },\n    data: {\n      firstName: fname,\n      lastName: lname,\n      email: email,\n      ...(newpassword && { password: newpassword }),\n      updatedAt: new Date(),\n    },\n  });\n  if (updateUser) {\n    return redirect(\"/users\");\n  } else {\n    console.log(\"err:\", \"failed to update the user\");\n  }\n}\n\nexport default function UserId() {\n  const user: any = useContext(UserContext);\n  const navigation = useNavigation();\n  const data = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  return (\n    <div className=\"grid place-items-center\">\n      <div className=\"w-full max-w-xs\">\n        <Form method=\"post\" className=\"bg-base-300 px-4 py-2 rounded-lg\">\n          <fieldset disabled={isSubmitting}>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"firstname\">\n                <span className=\"label-text\">First name</span>\n              </label>\n              <input\n                className=\"input input-bordered w-full max-w-xs\"\n                id=\"firstname\"\n                name=\"firstname\"\n                type=\"text\"\n                placeholder={user.firstName}\n              />\n              {data && data.formErrors && data.formErrors.fname && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.fname}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"lastname\">\n                <span className=\"label-text\">Last name</span>\n              </label>\n              <input\n                className=\"input input-bordered w-full max-w-xs\"\n                id=\"lastname\"\n                name=\"lastname\"\n                type=\"text\"\n                placeholder={user.lastName}\n              />\n              {data && data.formErrors && data.formErrors.lname && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.lname}\n                </p>\n              )}\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"email\">\n                <span className=\"label-text\">Email</span>\n              </label>\n              <input type=\"hidden\" name=\"email\" value={user.email} />\n              <input\n                className=\"input input-bordered w-full max-w-xs\"\n                type=\"text\"\n                placeholder={user.email}\n                disabled\n              />\n            </div>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"opassword\">\n                <span className=\"label-text\">Original password</span>\n              </label>\n              <input\n                className=\"input input-bordered w-full max-w-xs\"\n                id=\"opassword\"\n                name=\"opassword\"\n                type=\"password\"\n                placeholder=\"******************\"\n              />\n              {data && data.formErrors && data.formErrors.opassword && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.opassword}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\"label\" htmlFor=\"npassword\">\n                <span className=\"label-text\">New password</span>\n              </label>\n              <input\n                className=\"input input-bordered w-full max-w-xs\"\n                id=\"npassword\"\n                name=\"npassword\"\n                type=\"password\"\n                placeholder=\"******************\"\n              />\n              {data && data.formErrors && data.formErrors.npassword && (\n                <p className=\"text-error mt-1 text-xs\">\n                  {data.formErrors.npassword}\n                </p>\n              )}\n            </div>\n            <div className=\"mt-6 mb-2\">\n              <FormBtn type=\"submit\" isSubmitting={isSubmitting}>\n                Submit\n              </FormBtn>\n              <FormAnchorButton\n                href=\"/users\"\n                className=\"ml-3\"\n                isSubmitting={isSubmitting}\n              >\n                Cancel\n              </FormAnchorButton>\n            </div>\n          </fieldset>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigation } from \"@remix-run/react\";\nimport { useContext, useState } from \"react\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport Modal from \"~/components/Modal\";\nimport { SITE_TITLE, UserContext } from \"~/root\";\nimport { db, deleteUserById, getUserById } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport { resTDClass, resTRClass } from \"~/utils/styleClasses\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Users` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  const user = await getUserById(uid);\n  if (!user?.isAdmin) return redirect(`/users/${uid}`);\n  try {\n    let users = {};\n    users = await db.users.findMany();\n    return json({ users });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const deleteUserId = formData.get(\"uid\") as string;\n  const approvedUserId = formData.get(\"approvedUserId\") as string;\n  if (deleteUserId) {\n    try {\n      await deleteUserById(parseInt(deleteUserId));\n      return redirect(\"/users\");\n    } catch (err) {\n      console.error(err);\n      return {};\n    }\n  }\n  if (approvedUserId) {\n    try {\n      await db.users.update({\n        where: { id: parseInt(approvedUserId) },\n        data: { isApproved: 1 },\n      });\n      return redirect(\"/users\");\n    } catch (err) {\n      console.error(err);\n      return {};\n    }\n  }\n}\n\nexport default function UsersIndex() {\n  const { users } = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [deletedUserID, setDeletedUserId] = useState(0);\n  const [modelOpen, setModalOpen] = useState(false);\n  const user: any = useContext(UserContext);\n\n  return (\n    <>\n      <table className=\"table static\">\n        <thead>\n          <tr className=\"hidden md:table-row\">\n            <th>ID</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Email</th>\n            <th>Approved</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users &&\n            users.map((loopedUser: any) => {\n              return (\n                <tr className={resTRClass} key={loopedUser.id}>\n                  <td data-label=\"ID\" className={resTDClass}>\n                    {loopedUser.id}\n                  </td>\n                  <td data-label=\"First Name\" className={resTDClass}>\n                    {loopedUser.firstName}\n                  </td>\n                  <td data-label=\"Last Name\" className={resTDClass}>\n                    {loopedUser.lastName}\n                  </td>\n                  <td data-label=\"Email\" className={resTDClass}>\n                    {loopedUser.email}\n                  </td>\n                  <td data-label=\"Approved\" className={resTDClass}>\n                    {loopedUser.isApproved ? (\n                      \"Approved\"\n                    ) : (\n                      <Form method=\"post\">\n                        <input\n                          type=\"hidden\"\n                          name=\"approvedUserId\"\n                          value={loopedUser.id}\n                        />\n                        <FormBtn type=\"submit\" isSubmitting={isSubmitting}>\n                          Approve\n                        </FormBtn>\n                      </Form>\n                    )}\n                  </td>\n                  <td data-label=\"Actions\" className={resTDClass}>\n                    <div className=\"btn-group\">\n                      <FormAnchorButton\n                        href={`users/${loopedUser.id}`}\n                        isSubmitting={isSubmitting}\n                      >\n                        EDIT\n                      </FormAnchorButton>\n                      <FormBtn\n                        disabled={user.id === loopedUser.id}\n                        isSubmitting={isSubmitting}\n                        onClick={() => {\n                          setDeletedUserId(loopedUser.id);\n                          setModalOpen(true);\n                        }}\n                      >\n                        DELETE\n                      </FormBtn>\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <Modal open={modelOpen}>\n        <p className=\"py-4\">Are you sure you want to delete this user?</p>\n        <div className=\"modal-action\">\n          <Form\n            method=\"post\"\n            onSubmit={() => {\n              setModalOpen(false);\n            }}\n          >\n            <input type=\"hidden\" name=\"uid\" value={deletedUserID} />\n            <FormBtn type=\"submit\" isSubmitting>\n              Confirm\n            </FormBtn>\n          </Form>\n          <FormBtn isSubmitting onClick={() => setModalOpen(false)}>\n            Close\n          </FormBtn>\n        </div>\n      </Modal>\n    </>\n  );\n}\n", "import type { customers } from \"@prisma/client\";\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport CreateCustomerForm from \"~/components/CreateCustomerForm\";\nimport FormBtn from \"~/components/FormBtn\";\nimport Modal from \"~/components/Modal\";\nimport { SITE_TITLE } from \"~/root\";\nimport { createCustomer, db, deleteCustomerById } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport { contentBodyClass, resTDClass, resTRClass } from \"~/utils/styleClasses\";\nimport { validateCustomerData } from \"~/utils/validations\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Customers` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  try {\n    const customers: customers[] = await db.customers.findMany();\n    return json({ customers });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const { _action, ...values } = Object.fromEntries(formData);\n  switch (_action) {\n    case \"delete\":\n      const { customer_id } = values;\n      const deleteActionsErrors: any = {};\n      try {\n        await deleteCustomerById(parseInt(`${customer_id}`));\n        return { customerDeleted: true };\n      } catch (err) {\n        console.error(err);\n        deleteActionsErrors.info = `There was a problem deleting customer with id: ${customer_id}`;\n        return { deleteActionsErrors };\n      }\n    case \"create\":\n      const { name, tel, email, address } = values;\n      const createActionErrors: any = validateCustomerData(values);\n\n      if (Object.values(createActionErrors).some(Boolean))\n        return { createActionErrors };\n\n      try {\n        await createCustomer(`${name}`, `${tel}`, `${email}`, `${address}`);\n        return { customerCreated: true };\n      } catch (err) {\n        console.log(err);\n        createActionErrors.info =\n          \"There was a problem creating the customer...\";\n        return { createActionErrors };\n      }\n  }\n  return {};\n}\n\nexport default function Customers() {\n  const { customers }: { customers: customers[] } = useLoaderData();\n  const data = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [deletedCustomerID, setDeletedCustomerID] = useState(0);\n  const [deleteModelOpen, setDeleteModalOpen] = useState(false);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (!data) return;\n    if (data.customerCreated) setCreateModalOpen(false);\n    if (data.customerDeleted) setDeleteModalOpen(false);\n  }, [data]);\n\n  return (\n    <div className={contentBodyClass}>\n      {customers && customers.length ? (\n        <table className=\"table static\">\n          <thead>\n            <tr className=\"hidden md:table-row\">\n              <th>ID</th>\n              <th>Name</th>\n              <th>Tel</th>\n              <th>Email</th>\n              <th>Address</th>\n              <th className=\"md:text-right\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers &&\n              customers.map(\n                ({ customer_id, name, tel, email, address }: customers) => {\n                  return (\n                    <tr className={resTRClass} key={customer_id}>\n                      <td data-label=\"ID\" className={resTDClass}>\n                        {customer_id}\n                      </td>\n                      <td data-label=\"Name\" className={resTDClass}>\n                        {name}\n                      </td>\n                      <td data-label=\"Tel\" className={resTDClass}>\n                        {tel}\n                      </td>\n                      <td data-label=\"Email\" className={resTDClass}>\n                        {email}\n                      </td>\n                      <td data-label=\"Address\" className={resTDClass}>\n                        {address}\n                      </td>\n                      <td\n                        data-label=\"Actions\"\n                        className={`${resTDClass} md:text-right`}\n                      >\n                        <FormBtn\n                          isSubmitting={isSubmitting}\n                          onClick={() => {\n                            setDeletedCustomerID(customer_id);\n                            setDeleteModalOpen(true);\n                          }}\n                        >\n                          DELETE\n                        </FormBtn>\n                      </td>\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"text-center\">No customers found...</p>\n      )}\n      <div className=\"flex justify-end mt-4\">\n        <FormBtn\n          isSubmitting={isSubmitting}\n          onClick={() => {\n            setCreateModalOpen(true);\n          }}\n        >\n          Add new customer +\n        </FormBtn>\n      </div>\n      <Modal open={createModalOpen}>\n        <h3 className=\"mb-4\">Create new customer</h3>\n        {createModalOpen && (\n          <CreateCustomerForm\n            actionName=\"create\"\n            navigation={navigation}\n            formErrors={data?.createActionErrors}\n            onCancel={() => {\n              setCreateModalOpen(false);\n              if (data) data.createActionErrors = {};\n            }}\n          />\n        )}\n      </Modal>\n      <Modal open={deleteModelOpen}>\n        <p className=\"py-4\">Are you sure you want to delete this customer?</p>\n        {data && data.deleteActionsErrors && (\n          <p className=\"text-error mt-1 text-xs\">\n            {data.deleteActionsErrors.info}\n          </p>\n        )}\n        <div className=\"modal-action\">\n          <Form replace method=\"post\">\n            <input type=\"hidden\" name=\"customer_id\" value={deletedCustomerID} />\n            <FormBtn\n              type=\"submit\"\n              name=\"_action\"\n              value=\"delete\"\n              isSubmitting={isSubmitting}\n            >\n              Confirm\n            </FormBtn>\n          </Form>\n          <FormBtn\n            className=\"ml-4\"\n            isSubmitting={isSubmitting}\n            onClick={() => setDeleteModalOpen(false)}\n          >\n            Cancel\n          </FormBtn>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n", "import type {\n  product_brands,\n  product_models,\n  product_types,\n  products,\n} from \"@prisma/client\";\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport {\n  Form,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport CreateProductForm from \"~/components/CreateProductForm\";\nimport FormBtn from \"~/components/FormBtn\";\nimport Modal from \"~/components/Modal\";\nimport { SITE_TITLE } from \"~/root\";\nimport { createProduct, db, deleteProductById } from \"~/utils/db\";\nimport { getUserId } from \"~/utils/session\";\nimport { contentBodyClass, resTDClass, resTRClass } from \"~/utils/styleClasses\";\nimport { validateProductData } from \"~/utils/validations\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Products` }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  try {\n    const [brands, types, models, products]: [\n      brands: product_brands[],\n      types: product_types[],\n      models: product_models[],\n      products: products[]\n    ] = await Promise.all([\n      db.product_brands.findMany(),\n      db.product_types.findMany(),\n      db.product_models.findMany(),\n      db.products.findMany({\n        include: {\n          brand: true,\n          type: true,\n          model: true,\n        },\n      }),\n    ]);\n    return json({ brands, types, models, products });\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const { _action, ...values } = Object.fromEntries(formData);\n  switch (_action) {\n    case \"delete\":\n      const { product_id } = values;\n      const deleteActionsErrors: any = {};\n      try {\n        await deleteProductById(parseInt(`${product_id}`));\n        return { productDeleted: true };\n      } catch (err) {\n        console.error(err);\n        deleteActionsErrors.info = `There was a problem deleting product with id: ${product_id}`;\n        return { deleteActionsErrors };\n      }\n    case \"create\":\n      const { brand, newbrand, type, newtype, model, newmodel, price } = values;\n      const createActionErrors: any = validateProductData(values);\n\n      if (Object.values(createActionErrors).some(Boolean))\n        return { createActionErrors };\n\n      try {\n        await createProduct(\n          `${brand}`,\n          `${newbrand}`,\n          `${type}`,\n          `${newtype}`,\n          `${model}`,\n          `${newmodel}`,\n          `${price}`\n        );\n        return { productCreated: true };\n      } catch (err) {\n        console.log(err);\n        createActionErrors.info = \"There was a problem creating the product...\";\n        return { createActionErrors };\n      }\n  }\n}\n\nexport default function Products() {\n  const {\n    products,\n    brands,\n    types,\n    models,\n  }: {\n    products: products[];\n    brands: product_brands[];\n    types: product_types[];\n    models: product_models[];\n  } = useLoaderData();\n  const data = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const [deletedProductID, setDeletedProductID] = useState(0);\n  const [deleteModelOpen, setDeleteModalOpen] = useState(false);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (!data) return;\n    if (data.productCreated) setCreateModalOpen(false);\n    if (data.productDeleted) setDeleteModalOpen(false);\n  }, [data]);\n\n  useEffect(() => {\n    if (!data) return;\n    if (data.productCreated) setCreateModalOpen(false);\n    if (data.productDeleted) setDeleteModalOpen(false);\n  }, [data]);\n\n  return (\n    <div className={contentBodyClass}>\n      {products && products.length ? (\n        <table className=\"table static\">\n          <thead>\n            <tr className=\"hidden md:table-row\">\n              <th>ID</th>\n              <th>Brand</th>\n              <th>Type</th>\n              <th>Model</th>\n              <th>Price</th>\n              <th className=\"md:text-right\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products &&\n              products.map((loopedProducts: any) => {\n                return (\n                  <tr className={resTRClass} key={loopedProducts.product_id}>\n                    <td data-label=\"ID\" className={resTDClass}>\n                      {loopedProducts.product_id}\n                    </td>\n                    <td data-label=\"Brand\" className={resTDClass}>\n                      {loopedProducts.brand.brand_name}\n                    </td>\n                    <td data-label=\"Type\" className={resTDClass}>\n                      {loopedProducts.type.type_name}\n                    </td>\n                    <td data-label=\"Model\" className={resTDClass}>\n                      {loopedProducts.model.model_name}\n                    </td>\n                    <td data-label=\"Price\" className={resTDClass}>\n                      \u00A3{loopedProducts.price}\n                    </td>\n                    <td\n                      data-label=\"Actions\"\n                      className={`${resTDClass} md:text-right`}\n                    >\n                      <FormBtn\n                        isSubmitting={isSubmitting}\n                        onClick={() => {\n                          setDeletedProductID(loopedProducts.product_id);\n                          setDeleteModalOpen(true);\n                        }}\n                      >\n                        DELETE\n                      </FormBtn>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"text-center\">No products found...</p>\n      )}\n      <div className=\"flex justify-end mt-4\">\n        <FormBtn\n          isSubmitting={isSubmitting}\n          onClick={() => {\n            setCreateModalOpen(true);\n          }}\n        >\n          Add new product +\n        </FormBtn>\n      </div>\n      <Modal open={createModalOpen}>\n        <h3 className=\"mb-4\">Create new product</h3>\n        {createModalOpen && (\n          <CreateProductForm\n            actionName=\"create\"\n            selectData={{\n              brands,\n              types,\n              models,\n            }}\n            navigation={navigation}\n            formErrors={data?.createActionErrors}\n            onCancel={() => {\n              setCreateModalOpen(false);\n              if (data) data.createActionErrors = {};\n            }}\n          />\n        )}\n      </Modal>\n      <Modal open={deleteModelOpen}>\n        <p className=\"py-4\">\n          Are you sure you want to delete this product?\n          <br />\n          NOTE: this doesn't delete the associated brand, model and type\n        </p>\n        <div className=\"modal-action\">\n          <Form replace method=\"post\">\n            <input type=\"hidden\" name=\"product_id\" value={deletedProductID} />\n            <FormBtn\n              type=\"submit\"\n              name=\"_action\"\n              value=\"delete\"\n              isSubmitting={isSubmitting}\n            >\n              Confirm\n            </FormBtn>\n          </Form>\n          <FormBtn\n            isSubmitting={isSubmitting}\n            onClick={() => setDeleteModalOpen(false)}\n          >\n            Cancel\n          </FormBtn>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n", "import {\n  redirect,\n  type LoaderArgs,\n  type V2_MetaFunction,\n} from \"@remix-run/node\";\nimport { SITE_TITLE } from \"~/root\";\nimport { getUserId } from \"~/utils/session\";\nimport { contentBodyClass } from \"~/utils/styleClasses\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: SITE_TITLE }];\n};\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  const uid = await getUserId(request);\n  if (!uid) return redirect(\"/login\");\n  return {};\n};\n\nexport default function IndexRoute() {\n  return (\n    <div className={contentBodyClass}>\n      <p>Welcome to Smart CCTV admin</p>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { logout } from \"~/utils/session\";\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return logout(request);\n};\n", "import { Outlet } from \"react-router\";\nimport { contentBodyClass } from \"~/utils/styleClasses\";\n\nexport default function Quotes() {\n  return (\n    <div className={contentBodyClass}>\n      <Outlet />\n    </div>\n  );\n}\n", "import type { ActionArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, useNavigation } from \"@remix-run/react\";\nimport bcrypt from \"bcryptjs\";\nimport FormAnchorButton from \"~/components/FormAnchorBtn\";\nimport FormBtn from \"~/components/FormBtn\";\nimport { SITE_TITLE } from \"~/root\";\nimport { getUserByEmail } from \"~/utils/db\";\nimport { createUserSession } from \"~/utils/session\";\nimport { formClass, inputClass } from \"~/utils/styleClasses\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: `${SITE_TITLE} - Login` }];\n};\n\nexport async function action({ request }: ActionArgs) {\n  const body = await request.formData();\n  const email = body.get(\"email\") as string;\n  const password = body.get(\"password\") as string;\n  var mess = \"\";\n  const user = await getUserByEmail(email);\n  if (user && user.isApproved) {\n    const isCorrectPassword = await bcrypt.compare(\n      password,\n      `${user.password}`\n    );\n    if (!isCorrectPassword) mess = \"Invalid password!\";\n    else {\n      return await createUserSession(user.id, \"/\");\n    }\n  } else {\n    mess = \"User not found\";\n  }\n\n  return json({ message: mess });\n}\n\nexport default function Login() {\n  const navigation = useNavigation();\n  const data = useActionData();\n  const isSubmitting = navigation.state === \"submitting\";\n  return (\n    <div className=\"grid place-items-center\">\n      <div className=\"w-full max-w-xs\">\n        <Form method=\"post\" className={formClass}>\n          <fieldset disabled={isSubmitting}>\n            <div className=\"mb-4\">\n              <label className=\"label\" htmlFor=\"email\">\n                <span className=\"label-text\">Email</span>\n              </label>\n              <input\n                className={inputClass}\n                name=\"email\"\n                id=\"email\"\n                type=\"text\"\n                placeholder=\"john@example.com\"\n              />\n            </div>\n            <div>\n              <label className=\"label\" htmlFor=\"password\">\n                <span className=\"label-text\">Password</span>\n              </label>\n              <input\n                className={inputClass}\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"******************\"\n              />\n            </div>\n            <div className=\"mt-6 mb-2\">\n              <FormBtn type=\"submit\" isSubmitting={isSubmitting}>\n                Log In\n              </FormBtn>\n              <FormAnchorButton className=\"ml-4\" href=\"/users/register\">\n                Register\n              </FormAnchorButton>\n              {data && data.message && (\n                <label className=\"label\">\n                  <span className=\"label-text-alt text-error\">\n                    {data.message}\n                  </span>\n                </label>\n              )}\n            </div>\n          </fieldset>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { Outlet } from \"react-router\";\nimport { contentBodyClass } from \"~/utils/styleClasses\";\n\nexport default function Users() {\n  return (\n    <div className={contentBodyClass}>\n      <Outlet />\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-4UM2EQFA.js','imports':['/build/_shared/chunk-OAPPX4FA.js','/build/_shared/chunk-WEAPBHQG.js','/build/_shared/chunk-FKB2SGI5.js','/build/_shared/chunk-2QJY4JOV.js','/build/_shared/chunk-BQ232ZJA.js','/build/_shared/chunk-TH3LK4B7.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-CJ4MY3PQ.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-QGDVQGT3.js','imports':['/build/_shared/chunk-EWGQC7VD.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-BBVYZMW4.js','imports':['/build/_shared/chunk-YSKQXYUK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/customers':{'id':'routes/customers','parentId':'root','path':'customers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/customers-64K75FYE.js','imports':['/build/_shared/chunk-PFQU7YSQ.js','/build/_shared/chunk-HXJWSP2T.js','/build/_shared/chunk-YSKQXYUK.js','/build/_shared/chunk-MKXCJEVK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-3IAIF2LQ.js','imports':['/build/_shared/chunk-YSKQXYUK.js','/build/_shared/chunk-MT6OIOVU.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-5GTPI7EF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/products':{'id':'routes/products','parentId':'root','path':'products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/products-UYPGPCS7.js','imports':['/build/_shared/chunk-QOHE33S7.js','/build/_shared/chunk-HXJWSP2T.js','/build/_shared/chunk-YSKQXYUK.js','/build/_shared/chunk-MKXCJEVK.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes':{'id':'routes/quotes','parentId':'root','path':'quotes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes-NCKKACDD.js','imports':['/build/_shared/chunk-YSKQXYUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.$quoteid':{'id':'routes/quotes.$quoteid','parentId':'routes/quotes','path':':quoteid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.$quoteid-SQWXF75V.js','imports':['/build/_shared/chunk-HXJWSP2T.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.$quoteid.generatedquote':{'id':'routes/quotes.$quoteid.generatedquote','parentId':'routes/quotes.$quoteid','path':'generatedquote','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.$quoteid.generatedquote-PGCXKCXU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes._index':{'id':'routes/quotes._index','parentId':'routes/quotes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/quotes._index-OMN4OL5U.js','imports':['/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/quotes.create':{'id':'routes/quotes.create','parentId':'routes/quotes','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/quotes.create-MD6CGSUC.js','imports':['/build/_shared/chunk-PFQU7YSQ.js','/build/_shared/chunk-QOHE33S7.js','/build/_shared/chunk-HXJWSP2T.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users':{'id':'routes/users','parentId':'root','path':'users','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users-7XHE2JWS.js','imports':['/build/_shared/chunk-YSKQXYUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users.$userid':{'id':'routes/users.$userid','parentId':'routes/users','path':':userid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users.$userid-ZZWNCYYQ.js','imports':['/build/_shared/chunk-MT6OIOVU.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users._index':{'id':'routes/users._index','parentId':'routes/users','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/users._index-ZBJ6TCNA.js','imports':['/build/_shared/chunk-HXJWSP2T.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/users.register':{'id':'routes/users.register','parentId':'routes/users','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/users.register-PVQZSGKM.js','imports':['/build/_shared/chunk-MT6OIOVU.js','/build/_shared/chunk-5I2QP7L3.js','/build/_shared/chunk-MKXCJEVK.js','/build/_shared/chunk-EWGQC7VD.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'ca40e20f','hmr':{'runtime':'/build/_shared/chunk-TH3LK4B7.js','timestamp':1690558199123},'url':'/build/manifest-CA40E20F.js'};", "\nimport * as entryServer from \"/mnt/c/dev/smartcctv-invoicing/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/quotes.$quoteid.generatedquote.tsx\";\nimport * as route2 from \"./routes/quotes.$quoteid.tsx\";\nimport * as route3 from \"./routes/users.register.tsx\";\nimport * as route4 from \"./routes/quotes._index.tsx\";\nimport * as route5 from \"./routes/quotes.create.tsx\";\nimport * as route6 from \"./routes/users.$userid.tsx\";\nimport * as route7 from \"./routes/users._index.tsx\";\nimport * as route8 from \"./routes/customers.tsx\";\nimport * as route9 from \"./routes/products.tsx\";\nimport * as route10 from \"./routes/_index.tsx\";\nimport * as route11 from \"./routes/logout.tsx\";\nimport * as route12 from \"./routes/quotes.tsx\";\nimport * as route13 from \"./routes/login.tsx\";\nimport * as route14 from \"./routes/users.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/quotes.$quoteid.generatedquote\": {\n      id: \"routes/quotes.$quoteid.generatedquote\",\n      parentId: \"routes/quotes.$quoteid\",\n      path: \"generatedquote\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/quotes.$quoteid\": {\n      id: \"routes/quotes.$quoteid\",\n      parentId: \"routes/quotes\",\n      path: \":quoteid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/users.register\": {\n      id: \"routes/users.register\",\n      parentId: \"routes/users\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/quotes._index\": {\n      id: \"routes/quotes._index\",\n      parentId: \"routes/quotes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/quotes.create\": {\n      id: \"routes/quotes.create\",\n      parentId: \"routes/quotes\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/users.$userid\": {\n      id: \"routes/users.$userid\",\n      parentId: \"routes/users\",\n      path: \":userid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/users._index\": {\n      id: \"routes/users._index\",\n      parentId: \"routes/users\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/customers\": {\n      id: \"routes/customers\",\n      parentId: \"root\",\n      path: \"customers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/products\": {\n      id: \"routes/products\",\n      parentId: \"root\",\n      path: \"products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/quotes\": {\n      id: \"routes/quotes\",\n      parentId: \"root\",\n      path: \"quotes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/users\": {\n      id: \"routes/users\",\n      parentId: \"root\",\n      path: \"users\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    }\n  };"],
  "mappings": "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",
  "names": ["nodemailer", "isbot", "import_node", "import_react", "import_node", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_jsx_dev_runtime", "name", "loader", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "cn", "import_classnames", "import_jsx_dev_runtime", "cn", "import_classnames", "import_jsx_dev_runtime", "cn", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "action", "bcrypt", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "prettifyDateString", "action", "loader", "meta", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_classnames", "import_jsx_dev_runtime", "cn", "import_react", "import_jsx_dev_runtime", "qty", "import_jsx_dev_runtime", "meta", "loader", "action", "price", "action", "loader", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "meta", "loader", "action", "bcrypt", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "action", "loader", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "loader", "action", "loader", "meta", "import_node", "import_jsx_dev_runtime", "meta", "loader", "loader", "loader", "import_jsx_dev_runtime", "action", "meta", "import_node", "import_react", "import_bcryptjs", "import_jsx_dev_runtime", "meta", "action", "bcrypt", "import_react_router", "import_jsx_dev_runtime"]
}
